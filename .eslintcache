[{"/home/ubuntu/cs496_week4/src/index.js":"1","/home/ubuntu/cs496_week4/src/reportWebVitals.js":"2","/home/ubuntu/cs496_week4/src/App.js":"3","/home/ubuntu/cs496_week4/src/Login.js":"4","/home/ubuntu/cs496_week4/src/firebaseConfig.js":"5","/home/ubuntu/cs496_week4/src/Hero.js":"6","/home/ubuntu/cs496_week4/src/App_tmp.js":"7","/home/ubuntu/cs496_week4/src/Nav.js":"8","/home/ubuntu/cs496_week4/src/New.js":"9","/home/ubuntu/cs496_week4/src/About.js":"10","/home/ubuntu/cs496_week4/src/Shop.js":"11","/home/ubuntu/cs496_week4/src/theme.dashboard.js":"12","/home/ubuntu/cs496_week4/src/Session/index.js":"13","/home/ubuntu/cs496_week4/src/Calendar/index.js":"14","/home/ubuntu/cs496_week4/src/Session/context.js":"15","/home/ubuntu/cs496_week4/src/Session/withAuthentication.js":"16","/home/ubuntu/cs496_week4/src/Calendar/calendar-body.js":"17","/home/ubuntu/cs496_week4/src/Calendar/calendar-head.js":"18","/home/ubuntu/cs496_week4/src/AddActivity/index.js":"19","/home/ubuntu/cs496_week4/src/ActivityList/index.js":"20","/home/ubuntu/cs496_week4/src/EditActivity/index.js":"21","/home/ubuntu/cs496_week4/src/Firebase/index.js":"22","/home/ubuntu/cs496_week4/src/Firebase/firebase.js":"23","/home/ubuntu/cs496_week4/src/Firebase/context.js":"24"},{"size":500,"mtime":1611235609045,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1611235609045,"results":"27","hashOfConfig":"26"},{"size":2474,"mtime":1611648378607,"results":"28","hashOfConfig":"26"},{"size":1606,"mtime":1611648378619,"results":"29","hashOfConfig":"26"},{"size":516,"mtime":1611405175211,"results":"30","hashOfConfig":"26"},{"size":856,"mtime":1611648378615,"results":"31","hashOfConfig":"26"},{"size":695,"mtime":1611648378607,"results":"32","hashOfConfig":"26"},{"size":2040,"mtime":1611648378619,"results":"33","hashOfConfig":"26"},{"size":165,"mtime":1611648378619,"results":"34","hashOfConfig":"26"},{"size":876,"mtime":1611648378603,"results":"35","hashOfConfig":"26"},{"size":1990,"mtime":1611648378623,"results":"36","hashOfConfig":"26"},{"size":2214,"mtime":1611648378627,"results":"37","hashOfConfig":"26"},{"size":144,"mtime":1611648378623,"results":"38","hashOfConfig":"26"},{"size":7166,"mtime":1611648378611,"results":"39","hashOfConfig":"26"},{"size":111,"mtime":1611648378619,"results":"40","hashOfConfig":"26"},{"size":832,"mtime":1611649030428,"results":"41","hashOfConfig":"26"},{"size":3022,"mtime":1611648378611,"results":"42","hashOfConfig":"26"},{"size":2743,"mtime":1611648378611,"results":"43","hashOfConfig":"26"},{"size":4371,"mtime":1611648378607,"results":"44","hashOfConfig":"26"},{"size":4578,"mtime":1611648378603,"results":"45","hashOfConfig":"26"},{"size":4464,"mtime":1611648378611,"results":"46","hashOfConfig":"26"},{"size":161,"mtime":1611648378615,"results":"47","hashOfConfig":"26"},{"size":1551,"mtime":1611648378615,"results":"48","hashOfConfig":"26"},{"size":289,"mtime":1611648378615,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"c0tyar",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/home/ubuntu/cs496_week4/src/index.js",[],["107","108"],"/home/ubuntu/cs496_week4/src/reportWebVitals.js",[],"/home/ubuntu/cs496_week4/src/App.js",["109","110","111","112","113"],"import React, { useState, useEffect } from 'react';\nimport fire from './firebaseConfig';\nimport './App.css';\nimport App_tmp from './App_tmp';\nimport Hero from './Hero';\nimport Nav from './Nav';\nimport Login from './Login';\n\nconst App = () => {\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmail('');\n    setPasswordError('');\n  }\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  }\n\n  const handleLogin = () => {\n    clearErrors();\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  }\n\n  const handleSignup = () => {\n    clearErrors();\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  }\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  }\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  }\n\n  useEffect(() => {\n    authListener();\n  }, []);\n  return (\n    <div className=\"App\">\n      {user ? (\n        <Hero handleLogout={handleLogout} />\n      ) : (\n          <Login\n            email={email}\n            setEmail={setEmail}\n            password={password}\n            setPassword={setPassword}\n            handleLogin={handleLogin}\n            handleSignup={handleSignup}\n            hasAccount={hasAccount}\n            setHasAccount={setHasAccount}\n            emailError={emailError}\n            passwordError={passwordError} />\n        )}\n\n    </div>\n  );\n\n};\n\nexport default App;","/home/ubuntu/cs496_week4/src/Login.js",[],"/home/ubuntu/cs496_week4/src/firebaseConfig.js",[],"/home/ubuntu/cs496_week4/src/Hero.js",[],"/home/ubuntu/cs496_week4/src/App_tmp.js",["114"],"import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Nav from './Nav';\nimport About from './About';\nimport Shop from './Shop';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Nav />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/shop\" component={Shop} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst Home = () => (\n  <div>\n    <h1>Home Page</h1>\n  </div>\n)\n\nexport default App;\n","/home/ubuntu/cs496_week4/src/Nav.js",["115","116","117","118"],"import React, { Component } from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport withFirebaseAuth from 'react-with-firebase-auth'\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport firebaseConfig from './firebaseConfig';\n\n//const firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst Nav = ({handleLogout}) => {\n    // render(){\n    //     const {\n    //         user,\n    //         signOut,\n    //         signInWithGoogle,\n    //       } = this.props;\n    \n         const navStyle = {\n             color:'white'\n         };\n    \n        return(\n            <nav>\n                <Link style={navStyle} to=\"/\">\n                    <h3>제목 뭐할까</h3>\n                </Link>\n                <ul className=\"nav-links\">\n                    <Link style={navStyle} to=\"/about\">\n                        <li>자기소개서 작성</li>\n                    </Link>\n                    <Link style={navStyle} to=\"/shop\">\n                        <li>활동 기록</li>\n                    </Link>\n                    <Link style={navStyle} to=\"/new\">\n                        <li>커뮤니티</li>\n                    </Link>\n                    <button onClick={handleLogout}>Logout</button> \n                </ul>\n                \n                {/* <div>\n                    {\n                        user \n                        ? <p>{user.displayName}님, 반갑습니다</p>\n                        : <p>로그인 하세요</p>\n                    }\n                </div>\n                    {\n                        user\n                        ? <button onClick={signOut}>로그아웃</button>\n                        : <button onClick={signInWithGoogle}>로그인</button>\n                    } */}\n            </nav>\n        );\n    }\n\n\n//const firebaseAppAuth = firebaseApp.auth();\n\n//const providers = {\n//  googleProvider: new firebase.auth.GoogleAuthProvider(),\n//};\n\n//export default withFirebaseAuth({\n//  providers,\n//  firebaseAppAuth,\n//})(Nav);\n\n\nexport default Nav;","/home/ubuntu/cs496_week4/src/New.js",[],"/home/ubuntu/cs496_week4/src/About.js",[],"/home/ubuntu/cs496_week4/src/Shop.js",["119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134"],"import React from 'react';\n\nimport { AuthUserContext, withAuthentication } from './Session';\nimport { withRouter } from 'react-router-dom';\n\nimport {\n  Switch,\n  Route,\n  useRouteMatch\n} from \"react-router-dom\";\n\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n\nimport useStyles from './theme.dashboard';\n\nimport Calendar from './Calendar';\n\nfunction Dashboard(props) {\n  let match = useRouteMatch();\n\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => setOpen(true);\n  const handleDrawerClose = () => setOpen(false);\n\n  const signOut = () => {\n    props.firebase.auth.signOut()\n    props.history.push(\"/\");\n  }\n\n  return (\n        <AuthUserContext.Consumer>\n        {\n        authUser => authUser ? (\n            <div className={classes.root}>\n                <CssBaseline />\n\n                <main className={classes.content, !open ? classes.contentClosed : classes.appBarShift }>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"xl\" className={classes.container}>\n                    <Calendar \n                        firebase={props.firebase}\n                        authUser={authUser}\n                    />\n              \n                </Container>\n                </main>\n                \n            </div>\n            ) : (\n            <p>Not authorized.</p>\n         )\n      }\n    </AuthUserContext.Consumer>\n  );\n};\n\nexport default withRouter(withAuthentication(Dashboard));","/home/ubuntu/cs496_week4/src/theme.dashboard.js",[],"/home/ubuntu/cs496_week4/src/Session/index.js",[],"/home/ubuntu/cs496_week4/src/Calendar/index.js",["135","136"],"import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Firebase from 'firebase';\nimport CalendarBody from './calendar-body';\nimport CalendarHead from './calendar-head';\n\nimport AddActivity from '../AddActivity';\nimport EditActivity from '../EditActivity';\nimport ActivityList from '../ActivityList';\n\nfunction Calendar(props) {\n\n    const {firebase, authUser} = props;\n\n    let defaultSelectedDay = {\n        day: moment().format(\"D\"),\n        month: moment().month()\n    };\n\n    /*** HOOKS ***/\n    const [dateObject, setdateObject] = useState(moment());\n    const [showMonthTable, setShowMonthTable] = useState(false);\n    const [selectedDay, setSelected] = useState(defaultSelectedDay);\n    // Later add hook for active days from database\n\n    /*** CALENDAR HEAD ***/\n    const allMonths = moment.months();\n    const currentMonth = () => dateObject.format(\"MMMM\");\n    const currentYear = () => dateObject.format(\"YYYY\");\n\n    const setMonth = month => {\n        let monthNo = allMonths.indexOf(month);\n        let newDateObject = Object.assign({}, dateObject);\n        newDateObject = moment(dateObject).set(\"month\", monthNo);\n        setdateObject(newDateObject);\n        setShowMonthTable(false);\n    }\n\n    const toggleMonthSelect = () => setShowMonthTable(!showMonthTable);\n\n    /*** CALENDAR BODY ***/\n    const setSelectedDay = day => {\n        setSelected({\n                day,\n                month: currentMonthNum()\n        });\n         // Later refresh data\n    };\n\n    const currentMonthNum = () => dateObject.month();\n    const daysInMonth = () => dateObject.daysInMonth();\n    const currentDay = () => dateObject.format(\"D\");\n    const actualMonth = () => moment().format(\"MMMM\");\n\n    const firstDayOfMonth = () => moment(dateObject).startOf(\"month\").format(\"d\");\n\n    /*** ADDING AN ACTIVITY ***/\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [snackbarMsg, setSnackbarMsg] = useState(null);\n\n    /*** ACTIVITY LIST ***/\n    const [activities, setActivities] = useState(true);\n    const [loading, setLoading] = useState([]);\n    const [activeDays, setActiveDays] = useState([]);\n\n    const retrieveData = () => {\n        \n        let queryDate = `${selectedDay.day}-${selectedDay.month}-${selectedDay.year}`;\n\n        let ref = Firebase.database().ref(authUser.uid);\n        ref.orderByChild(\"date\").equalTo(queryDate).on(\"value\", snapshot => {\n            let data = snapshot.val();\n            setActivities(data);\n            setLoading(false);\n            // setEditing(false); Add later\n        });\n\n        // Update active days\n         retrieveActiveDays();\n    };\n\n    const retrieveActiveDays = () => {\n        let ref = Firebase.database().ref(authUser.uid);\n        ref.on(\"value\", snapshot => {\n            let data = snapshot.val();\n            if(data){\n            const values = Object.values(data);\n            // Store all active day/month combinations in array for calendar\n            const arr = values.map(obj => {\n                return obj.date.length === 8\n                ? obj.date.slice(0,3)\n                : obj.date.slice(0,4)\n            });\n            console.log(arr);\n            setActiveDays(arr);\n            }\n        });\n    }\n\n    useEffect(() => retrieveData(), [selectedDay]);\n\n    /*** EDIT AN ACTIVITY ***/\n    const [editing, setEditing] = useState(false);\n    const [activity, setActivity] = useState(null);\n    const [activityKey, setActivityKey] = useState(null);\n\n    const editActivity = (activity, i) => {\n        setActivityKey(Object.keys(activities)[i]);\n        setEditing(true);\n        setActivity(activity);\n    }\n\n    return (\n        <Grid container spacing={3}>\n            <Grid item xs={12} md={8} lg={9}>\n                    <CalendarHead\n                        allMonths={allMonths}\n                        currentMonth={currentMonth}\n                        currentYear={currentYear}\n                        setMonth={setMonth}\n                        showMonthTable={showMonthTable}\n                        toggleMonthSelect={toggleMonthSelect}\n                    />\n                    <CalendarBody \n                        firstDayOfMonth={firstDayOfMonth}\n                        daysInMonth={daysInMonth}\n                        currentDay={currentDay}\n                        currentMonth={currentMonth}\n                        currentMonthNum={currentMonthNum}\n                        actualMonth={actualMonth}\n                        setSelectedDay={setSelectedDay}\n                        selectedDay={selectedDay}\n                        weekdays={moment.weekdays()} \n                        activeDays={activeDays}\n                    />\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n                <Paper className=\"paper\">\n                    { editing\n                        ?\n                            <>\n                                <h3>Edit activity on {selectedDay.day}-{selectedDay.month + 1} </h3>\n                                <EditActivity \n                                    activity={activity}\n                                    activityKey={activityKey}\n                                    selectedDay={selectedDay} \n                                    authUser={props.authUser}\n                                    setEditing={setEditing}\n                                    setOpenSnackbar={setOpenSnackbar}\n                                    setSnackbarMsg={setSnackbarMsg}\n                                />\n                            </>\n                        :\n                            <>\n                                <h3>Add activity on {selectedDay.day}-{selectedDay.month + 1} </h3>\n                                <AddActivity \n                                    selectedDay={selectedDay} \n                                    authUser={props.authUser}\n                                    setOpenSnackbar={setOpenSnackbar}\n                                    setSnackbarMsg={setSnackbarMsg}\n                                />\n                            </>\n                    }\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={7}>\n                <Paper className=\"paper\">\n                <h3>Activities on {selectedDay.day}-{selectedDay.month + 1}</h3>\n                <ActivityList\n                    loading={loading}\n                    activities={activities}\n                    authUser={props.authUser}\n                    setOpenSnackbar={setOpenSnackbar}\n                    setSnackbarMsg={setSnackbarMsg}\n                    editActivity={editActivity}\n                    setEditing={setEditing}\n                />\n                </Paper>\n            </Grid>\n            <Snackbar \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                open={openSnackbar} \n                message={snackbarMsg}\n            />\n        </Grid>\n    )\n};\nexport default Calendar;","/home/ubuntu/cs496_week4/src/Session/context.js",[],"/home/ubuntu/cs496_week4/src/Session/withAuthentication.js",[],"/home/ubuntu/cs496_week4/src/Calendar/calendar-body.js",["137","138","139","140"],"import React from 'react';\nimport './calendar.css';\nimport nextId from \"react-id-generator\";\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst CalendarBody = props => {\n\n    const { firstDayOfMonth, daysInMonth, currentDay, currentMonth, currentMonthNum, selectedDay, activeDays, setSelectedDay, actualMonth, weekdays } = props;\n\n    let blanks = [];\n    for (let i = 0; i < firstDayOfMonth(); i++) {\n        blanks.push(\n            <TableCell key={nextId()}>{\"\"}</TableCell>\n        )\n    }\n\n    let monthDays = [];\n    for (let d = 1; d <= daysInMonth(); d++) {\n        let currDay, selectDay, activeDay;\n\n        // Check if day is today\n        if (currentDay() == d && currentMonth() == actualMonth()) currDay = \"today\";\n\n        // Check if day is selected day\n        if (selectedDay.day == d && currentMonthNum() == selectedDay.month ) selectDay = \"selected-day\";\n        \n        // Check if day found in this month active days\n        let formattedDate = `${d}-${currentMonthNum()}`;\n        if (activeDays.indexOf(formattedDate) !== -1) activeDay = \"active\";\n\n        // console.log(activeDays);\n\n        monthDays.push(\n            <TableCell \n                key={d} \n                className={`week-day ${currDay} ${selectDay}`}\n                onClick={() => setSelectedDay(d)}\n            >\n                <span className={activeDay}>{d}</span>\n            </TableCell>\n        );\n    }\n\n    let totalSlots = [...blanks, ...monthDays];\n    let rows = [];\n    let cells = [];\n\n    totalSlots.forEach((row, i) => {\n        if (i % 7 !== 0) {\n            cells.push(row);\n        } else {\n            rows.push(cells);\n            cells = [];\n            cells.push(row);\n        }\n        if (i === totalSlots.length - 1) {\n            rows.push(cells)\n        }\n    })\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className=\"calendar\">\n                <TableHead>\n                    <TableRow>\n                        {\n                            weekdays.map((day, i) => (\n                                <TableCell key={i}>\n                                    {day}\n                                </TableCell>\n                            ))\n                        }\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        rows.map((day, i) => \n                            <TableRow \n                                key={i}\n                            >\n                                {day}\n                            </TableRow>)\n                    }\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n\nexport default CalendarBody;","/home/ubuntu/cs496_week4/src/Calendar/calendar-head.js",[],"/home/ubuntu/cs496_week4/src/AddActivity/index.js",[],"/home/ubuntu/cs496_week4/src/ActivityList/index.js",["141"],"import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport loader from './loader.gif';\nimport firebase from 'firebase';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nfunction ActivityList(props) {\n    const { loading, activities, editActivity, setOpenSnackbar, setSnackbarMsg, setEditing, authUser } = props;\n\n    const deleteActivity = (i) => {\n        // Get key of activity in firebase\n        const activityKey = Object.keys(activities)[i];\n        // Connect to our firebase API\n        const emptyActivity = {\n            date: null,\n            duration: null,\n            type: null,\n            name: null,\n        };\n\n        firebase.database().ref(authUser.uid).child(activityKey).remove();\n        // Show notification\n        setOpenSnackbar(true);\n        setSnackbarMsg('Deleted activity');\n        setTimeout(() => {\n            setOpenSnackbar(false)\n        }, 3000)\n\n        // stop editing\n        setEditing(false);\n    }\n\n    return (\n        <>\n            {\n                loading === true\n                    ? <img src={loader} alt={loader}></img>\n                    : ''\n            }\n\n            {\n                activities === 'not set' || activities === null\n                    ? <p>No activities added yet.</p>\n                    :\n                    <TableContainer component={Paper} >\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>활동명</TableCell>\n                                    <TableCell>종류</TableCell>\n                                    <TableCell>중요도</TableCell>\n                                    <TableCell>Actions</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    Object.values(activities).map((activity, i) => {\n                                        let { name, type, duration } = activity;\n                                        switch (activity.type) {\n                                            case 1:\n                                                type = \"자소서\";\n                                                break;\n                                            case 2:\n                                                type = \"보고서\";\n                                                break;\n                                            case 3:\n                                                type = \"면접 모의 질문\";\n                                                break;\n                                            default:\n                                                type = \"Not set\";\n                                        };\n                                        return (\n                                            <TableRow key={i}>\n                                                <TableCell>{name}</TableCell>\n                                                <TableCell>{type}</TableCell>\n                                                <TableCell>{duration}</TableCell>\n                                                <TableCell>\n                                                    <DeleteIcon\n                                                        onClick={e => deleteActivity(i)}\n                                                    />\n                                                    <EditIcon\n                                                        onClick={e => editActivity(activity, i)}\n                                                        style={{ marginLeft: \"20px\" }}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })\n                                }\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n            }\n        </>\n    )\n};\nexport default withFirebase(ActivityList);","/home/ubuntu/cs496_week4/src/EditActivity/index.js",["142","143"],"import React, { useState } from 'react';\nimport { withFirebase } from '../Firebase';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport firebase from 'firebase';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        minWidth: '100%',\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nfunction EditActivity(props) {\n    const classes = useStyles();\n\n    const { authUser, activity, activityKey, setEditing, setOpenSnackbar, setSnackbarMsg, activities } = props;\n    const uid = authUser.uid;\n\n    // Set default activity object\n    const defaultActivity = {\n        name: activity.name,\n        type: activity.type,\n        duration: activity.duration,\n        date: activity.date\n    }\n\n    const [newActivity, setNewActivity] = useState(defaultActivity);\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        setNewActivity({\n            ...newActivity,\n            [name]: value\n        });\n    }\n\n    const handleSlider = e => {\n        const duration = e.target.getAttribute('aria-valuenow');\n        setNewActivity({ ...newActivity, duration: duration });\n    }\n\n    const isValid = newActivity.name === '';\n\n    // Add the activity to firebase via the API made in this app\n    const handleSubmit = e => {\n        if (authUser) {\n            //firebase.updateActivity(uid, newActivity, activityKey);\n\n            firebase.database().ref(authUser.uid).child(activityKey).remove();\n            firebase.database().ref(authUser.uid).push(newActivity);\n            setEditing(false);\n            // Show alert and hide after 3sec\n            setOpenSnackbar(true);\n            setSnackbarMsg('Updated activity');\n            setTimeout(() => {\n                setOpenSnackbar(false)\n            }, 3000)\n        };\n    }\n\n    return (\n        <form noValidate onSubmit={e => e.preventDefault()}>\n            <FormControl className={classes.formControl}>\n                <TextField\n                    style={{ marginTop: '5px' }}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    value={newActivity.name}\n                    label=\"Activity name\"\n                    name=\"name\"\n                    onChange={handleChange}\n                />\n                <div style={{ marginTop: '20px', marginBottom: '30px' }}>\n                    <Typography id=\"discrete-slider\" gutterBottom>\n                        종류\n                    </Typography>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={newActivity.type}\n                        style={{ minWidth: '100%' }}\n                        name=\"type\"\n                        onChange={handleChange}\n                    >\n                        <MenuItem value={1}>자소서</MenuItem>\n                        <MenuItem value={2}>보고서</MenuItem>\n                        <MenuItem value={3}>면접 모의 질문</MenuItem>\n                    </Select>\n                </div>\n                <Typography id=\"discrete-slider\" gutterBottom>\n                    중요도\n                </Typography>\n                <Slider\n                    defaultValue={parseInt(newActivity.duration)}\n                    aria-labelledby=\"discrete-slider\"\n                    valueLabelDisplay=\"auto\"\n                    step={10}\n                    marks\n                    min={10}\n                    max={100}\n                    name=\"duration\"\n                    onChange={handleSlider}\n                    style={{ marginBottom: '20px' }}\n                />\n            </FormControl>\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => handleSubmit('add')}\n                disabled={isValid}\n            >\n                Save activity\n            </Button>\n        </form>\n    )\n};\n\nexport default withFirebase(EditActivity);","/home/ubuntu/cs496_week4/src/Firebase/index.js",[],"/home/ubuntu/cs496_week4/src/Firebase/firebase.js",[],"/home/ubuntu/cs496_week4/src/Firebase/context.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":15},{"ruleId":"148","severity":1,"message":"152","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":11},{"ruleId":"153","severity":1,"message":"154","line":33,"column":9,"nodeType":"155","messageId":"156","endLine":42,"endColumn":10},{"ruleId":"153","severity":1,"message":"154","line":52,"column":9,"nodeType":"155","messageId":"156","endLine":60,"endColumn":10},{"ruleId":"157","severity":1,"message":"158","line":81,"column":6,"nodeType":"159","endLine":81,"endColumn":8,"suggestions":"160"},{"ruleId":"148","severity":1,"message":"161","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":12},{"ruleId":"148","severity":1,"message":"162","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":26},{"ruleId":"148","severity":1,"message":"163","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":24},{"ruleId":"148","severity":1,"message":"164","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":16},{"ruleId":"148","severity":1,"message":"165","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":22},{"ruleId":"148","severity":1,"message":"166","line":7,"column":3,"nodeType":"150","messageId":"151","endLine":7,"endColumn":9},{"ruleId":"148","severity":1,"message":"167","line":8,"column":3,"nodeType":"150","messageId":"151","endLine":8,"endColumn":8},{"ruleId":"148","severity":1,"message":"168","line":12,"column":8,"nodeType":"150","messageId":"151","endLine":12,"endColumn":12},{"ruleId":"148","severity":1,"message":"169","line":14,"column":8,"nodeType":"150","messageId":"151","endLine":14,"endColumn":11},{"ruleId":"148","severity":1,"message":"170","line":15,"column":8,"nodeType":"150","messageId":"151","endLine":15,"endColumn":14},{"ruleId":"148","severity":1,"message":"171","line":16,"column":8,"nodeType":"150","messageId":"151","endLine":16,"endColumn":15},{"ruleId":"148","severity":1,"message":"172","line":17,"column":8,"nodeType":"150","messageId":"151","endLine":17,"endColumn":18},{"ruleId":"148","severity":1,"message":"173","line":18,"column":8,"nodeType":"150","messageId":"151","endLine":18,"endColumn":18},{"ruleId":"148","severity":1,"message":"174","line":19,"column":8,"nodeType":"150","messageId":"151","endLine":19,"endColumn":13},{"ruleId":"148","severity":1,"message":"175","line":21,"column":8,"nodeType":"150","messageId":"151","endLine":21,"endColumn":16},{"ruleId":"148","severity":1,"message":"176","line":22,"column":8,"nodeType":"150","messageId":"151","endLine":22,"endColumn":25},{"ruleId":"148","severity":1,"message":"177","line":29,"column":7,"nodeType":"150","messageId":"151","endLine":29,"endColumn":12},{"ruleId":"148","severity":1,"message":"178","line":35,"column":9,"nodeType":"150","messageId":"151","endLine":35,"endColumn":25},{"ruleId":"148","severity":1,"message":"179","line":36,"column":9,"nodeType":"150","messageId":"151","endLine":36,"endColumn":26},{"ruleId":"148","severity":1,"message":"180","line":38,"column":9,"nodeType":"150","messageId":"151","endLine":38,"endColumn":16},{"ruleId":"181","severity":1,"message":"182","line":50,"column":49,"nodeType":"183","messageId":"184","endLine":50,"endColumn":50},{"ruleId":"148","severity":1,"message":"185","line":17,"column":12,"nodeType":"150","messageId":"151","endLine":17,"endColumn":20},{"ruleId":"157","severity":1,"message":"186","line":104,"column":37,"nodeType":"159","endLine":104,"endColumn":50,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":29,"column":26,"nodeType":"190","messageId":"191","endLine":29,"endColumn":28},{"ruleId":"188","severity":1,"message":"189","line":29,"column":49,"nodeType":"190","messageId":"191","endLine":29,"endColumn":51},{"ruleId":"188","severity":1,"message":"189","line":32,"column":29,"nodeType":"190","messageId":"191","endLine":32,"endColumn":31},{"ruleId":"188","severity":1,"message":"189","line":32,"column":55,"nodeType":"190","messageId":"191","endLine":32,"endColumn":57},{"ruleId":"148","severity":1,"message":"192","line":22,"column":15,"nodeType":"150","messageId":"151","endLine":22,"endColumn":28},{"ruleId":"148","severity":1,"message":"193","line":26,"column":91,"nodeType":"150","messageId":"151","endLine":26,"endColumn":101},{"ruleId":"148","severity":1,"message":"194","line":27,"column":11,"nodeType":"150","messageId":"151","endLine":27,"endColumn":14},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'App_tmp' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["197"],"'logo' is defined but never used.","'Component' is defined but never used.","'withFirebaseAuth' is defined but never used.","'firebase' is defined but never used.","'firebaseConfig' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'clsx' is defined but never used.","'Box' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'IconButton' is defined but never used.","'Badge' is defined but never used.","'MenuIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'match' is assigned a value but never used.","'handleDrawerOpen' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","'signOut' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'firebase' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveData'. Either include it or remove the dependency array.",["198"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'emptyActivity' is assigned a value but never used.","'activities' is assigned a value but never used.","'uid' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [authListener]",{"range":"203","text":"204"},"Update the dependencies array to be: [retrieveData, selectedDay]",{"range":"205","text":"206"},[1925,1927],"[authListener]",[3424,3437],"[retrieveData, selectedDay]"]