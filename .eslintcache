[{"/home/ubuntu/cs496_week4/src/index.js":"1","/home/ubuntu/cs496_week4/src/reportWebVitals.js":"2","/home/ubuntu/cs496_week4/src/App.js":"3","/home/ubuntu/cs496_week4/src/firebaseConfig.js":"4","/home/ubuntu/cs496_week4/src/App_tmp.js":"5","/home/ubuntu/cs496_week4/src/Nav.js":"6","/home/ubuntu/cs496_week4/src/Hero.js":"7","/home/ubuntu/cs496_week4/src/question.js":"8","/home/ubuntu/cs496_week4/src/Login.js":"9","/home/ubuntu/cs496_week4/src/CountWord.js":"10","/home/ubuntu/cs496_week4/src/Shop.js":"11","/home/ubuntu/cs496_week4/src/New.js":"12","/home/ubuntu/cs496_week4/src/globalStyles.js":"13","/home/ubuntu/cs496_week4/src/addContext.js":"14","/home/ubuntu/cs496_week4/src/components/ShowModel.js":"15","/home/ubuntu/cs496_week4/src/components/ImageSlider.js":"16","/home/ubuntu/cs496_week4/src/components/ShowModal.js":"17","/home/ubuntu/cs496_week4/src/components/notFound.js":"18","/home/ubuntu/cs496_week4/src/components/SliderData.js":"19","/home/ubuntu/cs496_week4/src/components/Modal.js":"20","/home/ubuntu/cs496_week4/src/common/footer.js":"21","/home/ubuntu/cs496_week4/src/theme.dashboard.js":"22","/home/ubuntu/cs496_week4/src/components/InfoModal.js":"23","/home/ubuntu/cs496_week4/src/components/ContextModal.js":"24","/home/ubuntu/cs496_week4/src/showContext.js":"25","/home/ubuntu/cs496_week4/src/Calendar/index.js":"26","/home/ubuntu/cs496_week4/src/Session/index.js":"27","/home/ubuntu/cs496_week4/src/Calendar/calendar-body.js":"28","/home/ubuntu/cs496_week4/src/Calendar/calendar-head.js":"29","/home/ubuntu/cs496_week4/src/Session/withAuthentication.js":"30","/home/ubuntu/cs496_week4/src/Session/context.js":"31","/home/ubuntu/cs496_week4/src/EditActivity/index.js":"32","/home/ubuntu/cs496_week4/src/AddActivity/index.js":"33","/home/ubuntu/cs496_week4/src/ActivityList/index.js":"34","/home/ubuntu/cs496_week4/src/Firebase/index.js":"35","/home/ubuntu/cs496_week4/src/Firebase/firebase.js":"36","/home/ubuntu/cs496_week4/src/Firebase/context.js":"37"},{"size":500,"mtime":1611235609045,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":1611235609045,"results":"40","hashOfConfig":"39"},{"size":3240,"mtime":1611658636425,"results":"41","hashOfConfig":"39"},{"size":516,"mtime":1611405175211,"results":"42","hashOfConfig":"39"},{"size":813,"mtime":1611649950452,"results":"43","hashOfConfig":"39"},{"size":3619,"mtime":1611658430331,"results":"44","hashOfConfig":"39"},{"size":1405,"mtime":1611652273859,"results":"45","hashOfConfig":"39"},{"size":1424,"mtime":1611658125887,"results":"46","hashOfConfig":"39"},{"size":1740,"mtime":1611650028638,"results":"47","hashOfConfig":"39"},{"size":907,"mtime":1611650013842,"results":"48","hashOfConfig":"39"},{"size":1979,"mtime":1611651638841,"results":"49","hashOfConfig":"39"},{"size":6637,"mtime":1611650316221,"results":"50","hashOfConfig":"39"},{"size":211,"mtime":1611650251974,"results":"51","hashOfConfig":"39"},{"size":1551,"mtime":1611649938924,"results":"52","hashOfConfig":"39"},{"size":242,"mtime":1611651447663,"results":"53","hashOfConfig":"39"},{"size":1130,"mtime":1611659709187,"results":"54","hashOfConfig":"39"},{"size":12525,"mtime":1611649918864,"results":"55","hashOfConfig":"39"},{"size":261,"mtime":1611650316221,"results":"56","hashOfConfig":"39"},{"size":309,"mtime":1611659145448,"results":"57","hashOfConfig":"39"},{"size":4522,"mtime":1611659795882,"results":"58","hashOfConfig":"39"},{"size":464,"mtime":1611650316221,"results":"59","hashOfConfig":"39"},{"size":2214,"mtime":1611649642232,"results":"60","hashOfConfig":"39"},{"size":4484,"mtime":1611649817091,"results":"61","hashOfConfig":"39"},{"size":6374,"mtime":1611649797020,"results":"62","hashOfConfig":"39"},{"size":3631,"mtime":1611650176735,"results":"63","hashOfConfig":"39"},{"size":7166,"mtime":1611649642228,"results":"64","hashOfConfig":"39"},{"size":144,"mtime":1611649642232,"results":"65","hashOfConfig":"39"},{"size":3022,"mtime":1611649642228,"results":"66","hashOfConfig":"39"},{"size":2820,"mtime":1611657638532,"results":"67","hashOfConfig":"39"},{"size":832,"mtime":1611649642232,"results":"68","hashOfConfig":"39"},{"size":111,"mtime":1611649642232,"results":"69","hashOfConfig":"39"},{"size":4464,"mtime":1611649642228,"results":"70","hashOfConfig":"39"},{"size":4741,"mtime":1611649642228,"results":"71","hashOfConfig":"39"},{"size":4746,"mtime":1611649642228,"results":"72","hashOfConfig":"39"},{"size":161,"mtime":1611649642228,"results":"73","hashOfConfig":"39"},{"size":1551,"mtime":1611649642228,"results":"74","hashOfConfig":"39"},{"size":289,"mtime":1611649642228,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"c0tyar",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"78"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"/home/ubuntu/cs496_week4/src/index.js",[],["168","169"],"/home/ubuntu/cs496_week4/src/reportWebVitals.js",[],"/home/ubuntu/cs496_week4/src/App.js",["170","171","172","173","174","175","176","177","178","179","180","181","182","183"],"import React, { useState, useEffect } from 'react';\nimport fire from './firebaseConfig';\nimport './App.css';\nimport App_tmp from './App_tmp';\nimport Home from './Hero';\nimport Hero from './Hero';\nimport Nav from './Nav';\nimport Login from './Login';\nimport Question from './question';\nimport {Redirect, useHistory} from 'react-router';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\n\nconst App = ({history}) => {\n    const [user, setUser] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [hasAccount, setHasAccount] = useState(false);\n\n    const clearInputs = () => {\n        setEmail('');\n        setPassword('');\n    }\n\n    const clearErrors = () => {\n        setEmailError('');\n        setPasswordError('');\n    }\n\n    const handleLogin = () => {\n        clearErrors();\n        fire\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .catch((err) => {\n                switch(err.code){\n                    case \"auth/invalid-email\":\n                    case \"auth/user-disabled\":\n                    case \"auth/user-not-found\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/wrong-password\":\n                        setPasswordError(err.message);\n                        break;\n                }\n            });\n\n    }\n\n    const handleSignup = () => {\n        clearErrors();\n        fire\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .catch((err) => {\n                switch(err.code){\n                    case \"auth/email-already-in-use\":\n                    case \"auth/invalid-email\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/weak-password\":\n                        setPasswordError(err.message);\n                        break;\n                }\n            });\n    }\n    const handleLogout = () => {\n        fire.auth().signOut();\n    }\n\n    const authListener = () => {\n        fire.auth().onAuthStateChanged((user) =>{\n            if(user) {\n                clearInputs();\n                setUser(user);\n            } else{\n                setUser(\"\");\n            }\n        });\n    }\n    var email_result = user.email\n    useEffect(() => {\n        authListener();\n    }, []);\n    return (\n        <div className=\"App\">\n            {user ?(\n                <Hero handleLogout={handleLogout} email_login={email_result.split(\"@\")[0]}/>\n            ) : (\n                <Login\n                email={email}\n                setEmail={setEmail}\n                password={password}\n                setPassword={setPassword}\n                handleLogin={handleLogin}\n                handleSignup={handleSignup}\n                hasAccount={hasAccount}\n                setHasAccount={setHasAccount}\n                emailError={emailError}\n                passwordError={passwordError} />\n            )}\n        </div>\n    );\n};\n\nexport default App;","/home/ubuntu/cs496_week4/src/firebaseConfig.js",[],"/home/ubuntu/cs496_week4/src/App_tmp.js",["184","185"],"import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Nav from './Nav';\nimport countword from './CountWord';\nimport Shop from './Shop';\nimport ShowModal from './components/ShowModal'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Nav />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/countword\" component={countword} />\n            <Route path=\"/shop\" component={Shop} />\n            <Route path=\"/context\" component={Shop} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst Home = () => (\n  <div>\n    <h1>Home Page</h1>\n  </div>\n)\n\nexport default App;\n","/home/ubuntu/cs496_week4/src/Nav.js",["186","187","188","189","190","191","192"],"import React, { Component, useState } from 'react';\r\nimport './App.css';\r\nimport { Link } from 'react-router-dom';\r\nimport withFirebaseAuth from 'react-with-firebase-auth'\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport question_mark from './image/question_mark.png';\r\nimport firebaseConfig from './firebaseConfig';\r\nimport Question from './question';\r\nimport { Button } from '@material-ui/core';\r\n// import { Modal } from './components/modal/Modal';\r\n\r\n//const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst Nav = (props) => {\r\n    // render(){\r\n    //     const {\r\n    //         user,\r\n    //         signOut,\r\n    //         signInWithGoogle,\r\n    //       } = this.props;\r\n    \r\n         const navStyle = {\r\n            color:'white',\r\n            textDecoration : 'none'\r\n         };\r\n\r\n        const [show, setShow] = useState(false);\r\n\r\n        const closeModalHandler = () => setShow(false);\r\n    \r\n        return(\r\n            <nav>\r\n                <Link style={navStyle} to=\"/\">\r\n                    <h3 className=\"pfh3\">My PF</h3>\r\n                </Link>\r\n                {/* { show ? <div onClick={closeModalHandler} className=\"back-drop\"></div> : null }\r\n                <button className=\"btn-openModal\" onClick={() => setShow(true)}>Open Modal</button>\r\n                <Modal show={show} close={closeModalHandler}/> */}\r\n                {/* <button className=\"question_mark\" onClick={\"javascript:location.href=\"+{Modal}}><img className=\"question_mark2\" src={question_mark} /></button> */}\r\n                <ul className=\"nav-links\">\r\n                    {/* <Link style={navStyle} to=\"/countword\">\r\n                        <ul className=\"navtext\">자기소개서 작성</ul>\r\n                    </Link> */}\r\n                    <Link style={navStyle} to=\"/shop\">\r\n                        <ul className=\"navfirst\">대외활동 기록</ul>\r\n                    </Link>\r\n                    <Link style={navStyle} to=\"/countword\">\r\n                        <ul className=\"navsecond\">글자 수 세기</ul>\r\n                    </Link>\r\n                    <Link style={navStyle} to=\"/new\">\r\n                        <ul className=\"navthird\">자유 게시판</ul>\r\n                    </Link>\r\n                </ul>\r\n                <Question name={props.name}>\r\n                   \r\n                </Question>\r\n                <Button className=\"logoutlink\" onClick={props.handleLogout}>\r\n                    <text>로그아웃</text>\r\n                    {/* <button className=\"logoutbtn\" onClick={props.handleLogout}>로그아웃</button> */}\r\n                </Button>\r\n                {/* <Link className=\"logoutlink\" to=\"/\">\r\n                    <button className=\"logoutbtn\" onClick={props.handleLogout}></button> \r\n                </Link> */}\r\n                {/* <div>\r\n                    {\r\n                        user \r\n                        ? <p>{user.displayName}님, 반갑습니다</p>\r\n                        : <p>로그인 하세요</p>\r\n                    }\r\n                </div>\r\n                    {\r\n                        user\r\n                        ? <button onClick={signOut}>로그아웃</button>\r\n                        : <button onClick={signInWithGoogle}>로그인</button>\r\n                    } */}\r\n            \r\n            </nav>\r\n            \r\n        );\r\n    }\r\n\r\n\r\n//const firebaseAppAuth = firebaseApp.auth();\r\n\r\n//const providers = {\r\n//  googleProvider: new firebase.auth.GoogleAuthProvider(),\r\n//};\r\n\r\n//export default withFirebaseAuth({\r\n//  providers,\r\n//  firebaseAppAuth,\r\n//})(Nav);\r\n\r\n\r\nexport default Nav;","/home/ubuntu/cs496_week4/src/Hero.js",["193","194"],"import React from 'react';\nimport Nav from './Nav';\nimport countword from './CountWord';\nimport Shop from './Shop';\nimport New from './New';\nimport AddContext from './addContext';\nimport ShowModal from './components/ShowModel'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Question from './question';\nimport ImageSlider from './components/ImageSlider';\nimport {SliderData} from './components/SliderData'\nimport Footer from './common/footer';\nimport NotFound from './components/notFound'\n\nconst Hero = (props) => {\n    console.log(props.handleLogout)\n    return (\n        <section className=\"hero\">\n            <Router>\n                <div className=\"App\">\n                <Nav handleLogout={props.handleLogout} name={props.email_login}/>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route path=\"/countword\" component={countword} />\n                    <Route path=\"/shop\" component={Shop} />\n                    <Route path=\"/new\" component={New} />\n                    <Route path=\"/context\" component={ShowModal} />\n                    <Route path = \"/*\" component = {NotFound} />\n                </Switch>\n                </div>\n            </Router>\n        </section>\n    )\n}\n\nconst Home = () => (\n    <div>\n      <ImageSlider slides={SliderData} />;\n      <Footer />\n    </div>\n)\n\nexport default Hero;","/home/ubuntu/cs496_week4/src/question.js",["195","196","197","198"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Modal } from './components/Modal';\nimport { GlobalStyle } from './globalStyles';\nimport './App.css';\nimport question_mark from './image/question_mark.png';\n\nconst Container = styled.div`\n  display: center;\n  justify-content: center;\n  align-items: center;\n  //height: 100vh;\n  // height : 50%;\n  // width : 40%;\n  text-align : center;\n  // vertical-align: middle;\n`;\n\nconst Button = styled.button`\n  min-width: 100px;\n  padding: 16px 32px;\n  // border-radius: 4px;\n  border: none;\n  background: #603bbb;\n  color: #fff;\n  font-size: 24px;\n  cursor: pointer;\n`;\n\nconst navStyle = {\n  color:'white',\n  textDecoration : 'none'\n};\n\nfunction New(props) {\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n\n  return (\n    <>\n      <Container>\n        <a onClick={openModal} data-toggle=\"modal\" data-target=\"#myModal\"><img className=\"question_mark\" src={question_mark}></img></a>\n        <div className=\"navtexttext\">어서오세요,  <text className=\"propsname\">{props.name}</text>  님!</div>\n        {/* <Button className=\"qnabtn\" onClick={openModal}><img className=\"question_mark\" src={question_mark}></img></Button> */}\n        <Modal showModal={showModal} setShowModal={setShowModal} />\n        <GlobalStyle />\n      </Container>\n    </>\n  );\n}\n\nexport default New;\n","/home/ubuntu/cs496_week4/src/Login.js",[],"/home/ubuntu/cs496_week4/src/CountWord.js",[],"/home/ubuntu/cs496_week4/src/Shop.js",["199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214"],"import React from 'react';\n\nimport { AuthUserContext, withAuthentication } from './Session';\nimport { withRouter } from 'react-router-dom';\n\nimport {\n  Switch,\n  Route,\n  useRouteMatch\n} from \"react-router-dom\";\n\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n\nimport useStyles from './theme.dashboard';\n\nimport Calendar from './Calendar';\n\nfunction Dashboard(props) {\n  let match = useRouteMatch();\n\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => setOpen(true);\n  const handleDrawerClose = () => setOpen(false);\n\n  const signOut = () => {\n    props.firebase.auth.signOut()\n    props.history.push(\"/\");\n  }\n\n  return (\n        <AuthUserContext.Consumer>\n        {\n        authUser => authUser ? (\n            <div className={classes.root}>\n                <CssBaseline />\n\n                <main className={classes.content, !open ? classes.contentClosed : classes.appBarShift }>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"xl\" className={classes.container}>\n                  <Calendar \n                          firebase={props.firebase}\n                          authUser={authUser}\n                      />\n                </Container>\n                </main>\n                \n            </div>\n            ) : (\n            <p>Not authorized.</p>\n         )\n      }\n    </AuthUserContext.Consumer>\n  );\n};\n\nexport default withRouter(withAuthentication(Dashboard));","/home/ubuntu/cs496_week4/src/New.js",["215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230"],"import React, {useState,useEffect} from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport ContactForm from \"./components/ContextModal\"\nimport fire from './firebaseConfig';\nimport AddContext from './addContext';\nimport Question from './question';\nimport styled from 'styled-components';\nimport { InfoModal } from './components/InfoModal';\nimport { GlobalStyle } from './globalStyles';\nimport question_mark from './image/question_mark.png';\nimport ShowContext from './showContext';\nimport {useHistory} from 'react-router';\n\nconst firebaseDb =  fire.database().ref();\nfunction New() {\n    var [contactObjects, setContactObjects] = useState({})\n    var [currentId, setCurrentId] = useState('')\n    const [comp, setComp] = useState(this)\n    var id_result = null\n\n    useEffect(()=>{\n        firebaseDb.child('contacts').on('value',snapshot=>{\n            if(snapshot.val() != null)\n                setContactObjects({\n                    ...snapshot.val()\n                })\n            else\n            setContactObjects({})\n        })\n    }, [])\n\n    const addOrEdit = obj => {\n        if(currentId=='')\n            firebaseDb.child('contacts').push(\n                obj,\n                err => {\n                    if(err) console.log(err)\n                    else setCurrentId('')\n                }\n            )\n        else\n            firebaseDb.child(`contacts/${currentId}`).set(\n                obj,\n                err => {\n                    if(err) console.log(err)\n                    else setCurrentId('')\n                }\n            )\n\n    }\n\n    const onDelete = key => {\n        if(window.confirm('Are you sure to delete this record?')) {\n            firebaseDb.child(`contacts/${key}`).remove(\n                err => {\n                    if(err) console.log(err)\n                    else setCurrentId('')\n                }\n            )\n        }\n    }\n\n    const Container = styled.div`\n    display: center;\n    justify-content: center;\n    align-items: center;\n    //height: 100vh;\n    height : 50%;\n    width : 40%;\n    text-align : center;\n    // vertical-align: middle;\n    `;\n\n    const Button = styled.button`\n    min-width: 100px;\n    padding: 16px 32px;\n    // border-radius: 4px;\n    border: none;\n    background: #603bbb;\n    color: #fff;\n    font-size: 24px;\n    cursor: pointer;\n    `;\n\n    const [showModal, setShowModal] = useState(false);\n    const openModal = () => {\n      setShowModal(prev => !prev);\n    };\n    // const [showModal, setShowModal] = useState(false);\n    // const openModal = () => {\n    //     <Question />\n    // };\n    const history = useHistory();\n    return(\n        // // <div>\n        // //     <h1>New Page</h1>\n        // // </div>\n        // <>\n            //{hasAccount ?(\n            //             <>\n            //                 <button onClick={handleLogin}>Sign in</button>\n            //                 <p>Don't have an account ? <span onClick={() => setHasAccount(!hasAccount)}>Sign up</span></p>\n            //             </>\n            //         ) : (\n            //             <>\n            //                 <button onClick={handleSignup}>Sign up</button>\n            //                 <p>Have an account ? <span onClick={() => setHasAccount(!hasAccount)}>Sign in</span> </p>\n            //             </>\n            //         )}\n            <>\n            {/* <div className=\"col-md-5\">\n                    <ContactForm {...({ addOrEdit, currentId, contactObjects })}/>\n            </div> */}\n            <div className=\"newtable\">\n            {/* table-borderless  */}\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            {/* <th>Full Name</th>\n                            <th>Mobile</th>\n                            <th>Email</th> */}\n                            <th>글쓴이</th>\n                            <th>제목</th>\n                            <th></th>\n                            {/* <th>Actions</th> */}\n                            <th><AddContext {...({ addOrEdit, currentId, contactObjects })}/></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            Object.keys(contactObjects).map(id => {\n                                var current = contactObjects[id]\n                                var id_result = id\n                                return <tr key={id}>\n                                    {/* <td>{contactObjects[id].fullName}</td> */}\n                                    <td className=\"ik\">익명</td>\n                                    <td className=\"fulln\">{contactObjects[id].fullName}</td>\n                                    <td></td>\n                                    {/* <td>{contactObjects[id].email}</td> */}\n                                    {/* <td>\n                                         {/* <a className=\"btn text-primary\" onClick={() => {<Question />}} data-toggle=\"modal\" data-target=\"#myModal\">\n                                            <i className=\"fas fa-pencil-alt\"></i>\n                                        </a> */}\n                                        {/* <Container>\n                                            {/* <a onClick={openModal} data-toggle=\"modal\" data-target=\"#myModal\"><img className=\"question_mark\" src={question_mark}></img></a> */}\n                                            {/* <Button className=\"qnabtn\" onClick={openModal}><img className=\"question_mark\" src={question_mark}></img></Button>\n                                            <InfoModal showModal={showModal} setShowModal={setShowModal} />\n                                            <GlobalStyle />\n                                        </Container> */} \n                                        {/* <a className=\"btn text-danger\" onClick={() => {onDelete(id)}}>\n                                            <i className=\"fas fa-trash-alt\"></i>\n                                        </a>\n                                    </td> */ }\n                                    <td><ShowContext {...({ addOrEdit, current, id_result })}/></td>\n                                    {/* onClick={() => {history.push(\"/context\")}}<td><Button onClick={clickgo}>글 보기</Button></td> */}\n                                </tr>\n                            })\n                        }\n                    </tbody>\n                </table>\n                {/* <button onClick={()=>{setComp(Addcontext)}}>새 글 쓰기</button>\n                 */}\n            </div>\n            \n            </>\n    );\n}\n\nexport default New;","/home/ubuntu/cs496_week4/src/globalStyles.js",[],"/home/ubuntu/cs496_week4/src/addContext.js",["231","232","233","234","235"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ContextModal } from './components/ContextModal';\nimport { GlobalStyle } from './globalStyles';\nimport './App.css';\nimport plus_mark from './image/plus_mark.png';\n\nconst Container = styled.div`\n  display: center;\n  justify-content: center;\n  align-items: center;\n  //height: 100vh;\n  height : 50%;\n  width : 40%;\n  text-align : center;\n  // vertical-align: middle;\n`;\n\nconst Button = styled.button`\n//min-width: 50px;\n  width : 80px;\n  padding: 16px 32px;\n  // border-radius: 4px;\n  border: none;\n  background: none;\n  color: #fff;\n  font-size: 24px;\n  cursor: pointer;\n`;\n\n\nconst AddContext = (props) => {\n    const [showModal, setShowModal] = useState(false);\n    const openModal = () => {\n        setShowModal(prev => !prev);\n    };\n    return (\n        <>\n            <Container>\n                <a onClick={openModal} data-toggle=\"modal\" data-target=\"#myModal\"><img className=\"plus_mark\" src={plus_mark}></img><br></br><text className=\"newwrite\">새 글 쓰기</text></a>\n                {/* <Button className=\"qnabtn\" onClick={openModal}><img className=\"plus_mark\" src={plus_mark}></img></Button> */}\n                <ContextModal showModal={showModal} setShowModal={setShowModal} addOrEdit={props.addOrEdit} currentId={props.currentId} contactObjects={props.contactObjects} />\n                <GlobalStyle />\n            </Container>\n        </>\n    );\n}\n\nexport default AddContext;\n","/home/ubuntu/cs496_week4/src/components/ShowModel.js",[],"/home/ubuntu/cs496_week4/src/components/ImageSlider.js",["236"],"/home/ubuntu/cs496_week4/src/components/ShowModal.js",["237","238","239","240","241","242","243","244"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport '../App.css'\nimport fire from '../firebaseConfig'\nimport firebase from 'firebase'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  // background: rgba(0, 0, 0, 0.8);\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalWrapper = styled.div`\n  width: 800px;\n  height: 500px;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n`;\n\n// const ModalImg = styled.img`\n//   width: 100%;\n//   height: 100%;\n//   border-radius: 10px 0 0 10px;\n//   background: #000;\n// `;\n\nconst ModalContent = styled.div`\n  display: absolute;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width : 150%;\n  height : 100%;\n  align-self : center;\n  line-height: 1.8;\n  color: #141414;\n  p {\n    margin-bottom: 1rem;\n  }\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\nconst firebaseDb = fire.database().ref();\nexport const ShowModal = ({ showModal, setShowModal, addOrEdit, current, id }) => {\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 0\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translate(-105%, -25%)` : `translate(-100%,-100%)`\n    // transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(\n    () => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  const initialFieldValues = {\n    fullName: '',\n    mobile: '',\n    email: [],\n    address: '',\n  }\n\n  var [values, setValues] = useState(initialFieldValues)\n\n  // useEffect(() => {\n  //     if(props.currentId=='')\n  //         setValues({\n  //             ...initialFieldValues\n  //         })\n  //     else\n  //         setValues({\n  //             ...props.contactObjects[props.currentId]\n  //         })\n\n  // }, [props.currentId, props.contactObjects])\n\n  const handleInputChange = e => {\n    var { name, value } = e.target\n    setValues({\n      ...values,\n      [name]: value\n    })\n  }\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    // aria-label='Close modal'\n    setShowModal(prev => !prev)\n    addOrEdit(values);\n    alert(\"글 쓰기 완료\");\n  }\n  var [contactObjects, setContactObjects] = useState({})\n  var [commitObjects, setCommitObjects] = useState({})\n  var [currentId, setCurrentId] = useState('')\n  const [comp, setComp] = useState(this)\n\n  useEffect(() => {\n    firebaseDb.child('contacts').on('value', snapshot => {\n      if (snapshot.val() != null)\n        setContactObjects({\n          ...snapshot.val()\n        })\n      else\n        setContactObjects({})\n    })\n  }, [])\n\n  useEffect(() => {\n    firebaseDb.child('contacts').child(id).child('commit').on('value', snapshot => {\n      if (snapshot.val() != null)\n        setCommitObjects({\n          ...snapshot.val()\n        })\n      else\n        setCommitObjects({})\n    })\n\n  }, [])\n\n  // const addOrEdit = obj => {\n  //     if(currentId=='')\n  //         firebaseDb.child('contacts').push(\n  //             obj,\n  //             err => {\n  //                 if(err) console.log(err)\n  //                 else setCurrentId('')\n  //             }\n  //         )\n  //     else\n  //         firebaseDb.child(`contacts/${currentId}`).set(\n  //             obj,\n  //             err => {\n  //                 if(err) console.log(err)\n  //                 else setCurrentId('')\n  //             }\n  //         )\n\n  // }\n  const onDelete = key => {\n    if (window.confirm('글을 삭제하시겠습니까?')) {\n      var input = prompt(\"비밀번호를 입력하세요\")\n      if (input == contactObjects[key].mobile) {\n        firebaseDb.child(`contacts/${key}`).remove(\n          err => {\n            if (err) console.log(err)\n            else setCurrentId('')\n          }\n        )\n        alert(\"삭제 완료\")\n      }\n      else {\n        alert(\"비밀번호가 틀립니다\")\n      }\n    }\n  }\n\n\n\n  const defaultActivity = {\n    name: ''\n  }\n\n  const [activity, setActivity] = useState(defaultActivity);\n\n  const handleChange = e => {\n    const { name, value } = e.target\n    setActivity({\n      ...activity,\n      [name]: value\n    });\n  }\n  const isValid = activity.name === '';\n  const updates = {};\n  //updates['contacts/' + id + '/' + ]\n  const handleSubmit = () => {\n    firebase.database().ref(\"contacts\").child(id).child(\"commit\").push(activity);\n    setActivity(defaultActivity);\n    // Show notification\n\n  }\n  console.log(current)\n\n  return (\n    <>\n      {showModal ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <ModalWrapper showModal={showModal}>\n              {/* <ModalImg src={require('./modal.jpg')} alt='camera' /> */}\n              <ModalContent>\n                {/* <h1>Are you ready?</h1>\n                <p>Get exclusive access to our next launch.</p>\n                <button>Join Now</button> */}\n                <div>\n                  <div>\n                    {current.fullName}\n                  </div>\n                  <div>\n                    {current.address}\n                  </div>\n                  {/* <table className=\"table table-borderless table-stripped\">\n                        <thead className=\"thead-light\">\n                            <tr>\n                                <th></th>\n                                <th></th>\n                                <th></th>\n                                <th></th>\n                            </tr>\n                        </thead> */}\n                        {/* <tbody>\n                            {\n                                Object.keys(contactObjects).map(id => {\n                                    console.log(id)\n                                    return <tr key={id}>\n                                        <td>{contactObjects[id].fullName}</td>\n                                        <td>{contactObjects[id].mobile}</td>\n                                        <td>{contactObjects[id].email}</td>\n                                        <td> */}\n                                            {/* <a className=\"btn text-primary\" onClick={() => {setCurrentId(id)}}>\n                                                <i className=\"fas fa-pencil-alt\"></i>\n                                            </a> */}\n                                            {/* <a className=\"btn text-danger\" onClick={() => {onDelete(id)}}>\n                                                <i className=\"fas fa-trash-alt\"></i>\n                                            </a>\n                                        </td>\n                                    </tr>\n                                })\n                            }\n                        </tbody>\n                    </table> */}\n                    {/* <form autoComplete=\"off\">\n                      <div className=\"addComment\">\n                        <text className=\"formtext\">댓글</text>\n                        <input className=\"addtext\" name=\"fullName\" value={current.email} onChange={handleInputChange}/>\n                        <button className=\"addbtn\">등록</button>\n                      </div>\n                    </form> */}\n                  <button onClick={() => { onDelete(id) }}>\n                    글 삭제\n                      </button>\n\n                  <TextField\n                    style={{ marginTop: '5px' }}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    label=\"댓글\"\n                    value={activity.name}\n                    name=\"name\"\n                    onChange={handleChange}\n                  />\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSubmit}\n                    disabled={isValid}\n                  >\n                    저장\n                  </Button>\n                  <div>\n                    <table className=\"commit-table\">\n                      \n                      <tbody>\n                        {\n                          Object.keys(commitObjects).map(uid => {\n                            return <tr key={uid}>\n                              <td>{commitObjects[uid].name}</td>\n                            </tr>\n                          })\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n\n                {/* <table className=\"table table-borderless table-stripped\">\n                    <thead className=\"thead-light\">\n                        <tr>\n                            <th>Full Name</th>\n                            <th>Mobile</th>\n                            <th>Email</th>\n                            <th>Address</th> */}\n                {/* <th>Actions</th> */}\n                {/* <th><AddContext {...({ addOrEdit, currentId, contactObjects })}/></th> */}\n                {/* </tr>\n                    </thead>\n                    <tbody>\n                        {\n                          <tr>\n                            <td>{current.fullName}</td>\n                            <td>{current.mobile}</td>\n                            <td>{current.email}</td>\n                            <td>{current.address}</td>\n                            <td> */}\n                {/* <a className=\"btn text-primary\" onClick={() => {setCurrentId(current)}} data-toggle=\"modal\" data-target=\"#myModal\">\n                                        <i className=\"fas fa-pencil-alt\"></i>\n                                    </a> */}\n                {/* <Container>\n                                        <a onClick={openModal} data-toggle=\"modal\" data-target=\"#myModal\"><img className=\"question_mark\" src={question_mark}></img></a>\n                                        <Button className=\"qnabtn\" onClick={openModal}><img className=\"question_mark\" src={question_mark}></img></Button>\n                                        <InfoModal showModal={showModal} setShowModal={setShowModal} />\n                                        <GlobalStyle />\n                                    </Container>  */}\n                {/* <a className=\"btn text-danger\" onClick={() => {onDelete(id)}}>\n                                        <i className=\"fas fa-trash-alt\"></i>\n                                    </a> */}\n                {/* </td>\n                          </tr> */}\n\n                {/* Object.keys(contactObjects).map(id =>  */}\n                {\n                        //     return <tr key={id}>\n                        //         <td>{contactObjects[id].fullName}</td>\n                        //         <td>{contactObjects[id].mobile}</td>\n                        //         <td>{contactObjects[id].email}</td>\n\n                        //         {/* <td><ShowContext {...({ addOrEdit, currentId, contactObjects })}/></td> */}\n                        //     </tr>\n                        // })\n\n                //         }\n                //     </tbody>\n                // </table>\n                /* <button onClick={()=>{setComp(Addcontext)}}>새 글 쓰기</button>\n                 */}\n              </ModalContent>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => setShowModal(prev => !prev)}\n              />\n            </ModalWrapper>\n          </animated.div>\n        </Background>\n      ) : null}\n    </>\n  );\n};\n","/home/ubuntu/cs496_week4/src/components/notFound.js",[],"/home/ubuntu/cs496_week4/src/components/SliderData.js",[],"/home/ubuntu/cs496_week4/src/components/Modal.js",["245"],"/home/ubuntu/cs496_week4/src/common/footer.js",[],"/home/ubuntu/cs496_week4/src/theme.dashboard.js",[],"/home/ubuntu/cs496_week4/src/components/InfoModal.js",["246"],"import React, { useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport modalimg from '../components/modal.jpg';\nimport emailjs from 'emailjs-com';\nimport '../App.css';\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  // background: rgba(0, 0, 0, 0.8);\n  // background-size : cover;\n  position: fixed;\n  display: center;\n  justify-content: center;\n  align-items: center;\n`;\n\n//이부분 width 다시\nconst ModalWrapper = styled.div`\n  width: 700px;\n  height: 100%;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  //grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n  \n`;\n\n// const ModalImg = styled.img`\n//   width: 100%;\n//   height: 100%;\n//   border-radius: 10px 0 0 10px;\n//   background: #000;\n// `;\n\nconst ModalContent = styled.div`\n  //display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  //line-height: 1.8;\n  color: #141414;\n\n  p {\n    margin-bottom: 1rem;\n  }\n\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\nexport const InfoModal = ({ showModal, setShowModal }) => {\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 0\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translate(25%,25%)` : `translate(-100%,-100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(\n    () => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  function sendEmail(e) {\n    e.preventDefault();\n\n    emailjs.sendForm('gmail', 'template_adtnacg', e.target, 'user_m2DzYtnjmQ2Uf4uaPcU36')\n        .then((result) =>{\n            console.log(result.text);\n        }, (error) => {\n            console.log(error.text);\n        });\n        e.target.reset()\n}\n\n  return (\n    <>\n    {showModal ? (\n      <Background onClick={closeModal} ref={modalRef}>\n        <animated.div style={animation}>\n          <ModalWrapper showModal={showModal}>\n            {/* <ModalImg src={require('./modal.jpg')} alt='camera' /> */}\n            <ModalContent>\n            <div>\n              <div className=\"container \">\n                  <div className=\"mailTitle\">의견을 말씀해주세요</div>\n                  <form onSubmit={sendEmail}>\n                      <div className=\"row pt-5 mx-auto\">\n                          <div className=\"col-8 form-group mx-auto\">\n                              <input type=\"text\" className=\"name\" placeholder=\"  Name\" name=\"name\" />\n                          </div>\n                          <div className=\"col-8 form-group pt-2 mx-auto\">\n                              <input type=\"email\" className=\"form-control\" placeholder=\"  Email Address\" name=\"email\" />\n                          </div>\n                          <div className=\"col-8 form-group pt-2 mx-auto\">\n                              <input type=\"text\" className=\"form-control\" placeholder=\"  Subject\" name=\"subject\" />\n                          </div>\n                          <div className=\"col-8 form-group pt-2 mx-auto\">\n                              <textarea className=\"sendmessage\" id=\"\" cols=\"30\" rows=\"8\" placeholder=\"  Your message\" name=\"message\"></textarea>\n                          </div>\n                          <div className=\"col-8 pt-3 mx-auto\">\n                              <input type=\"submit\" className=\"sendbtn\" value=\"Send Message\" />\n                          </div>\n                      </div>\n                  </form>\n              </div>\n          </div>\n            </ModalContent>\n            <CloseModalButton\n              aria-label='Close modal'\n              onClick={() => setShowModal(prev => !prev)}\n            />\n          </ModalWrapper>\n        </animated.div>\n      </Background>\n    ) : null}\n  </>\n  );\n};\n","/home/ubuntu/cs496_week4/src/components/ContextModal.js",["247"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport '../App.css'\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  // background: rgba(0, 0, 0, 0.8);\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalWrapper = styled.div`\n  width: 800px;\n  height: 500px;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n`;\n\n// const ModalImg = styled.img`\n//   width: 100%;\n//   height: 100%;\n//   border-radius: 10px 0 0 10px;\n//   background: #000;\n// `;\n\nconst ModalContent = styled.div`\n  display: absolute;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width : 150%;\n  height : 100%;\n  align-self : center;\n  line-height: 1.8;\n  color: #141414;\n\n  p {\n    margin-bottom: 1rem;\n  }\n\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\nexport const ContextModal = ({ showModal, setShowModal, addOrEdit, currentId, contactObjects }) => {\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 0\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translate(-105%, -25%)` : `translate(-100%,-100%)`\n    // transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(\n    () => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  const initialFieldValues = {\n    fullName : '',\n    mobile : '',\n    email : '',\n    address : '',\n    commit : ''\n  }\n\n  var [values, setValues] = useState(initialFieldValues)\n  console.log(values)\n  // useEffect(() => {\n  //     if(props.currentId=='')\n  //         setValues({\n  //             ...initialFieldValues\n  //         })\n  //     else\n  //         setValues({\n  //             ...props.contactObjects[props.currentId]\n  //         })\n      \n  // }, [props.currentId, props.contactObjects])\n\n  const handleInputChange = e => {\n      var { name, value} = e.target\n      setValues({\n          ...values,\n          [name] : value\n      })\n  }\n\n  const handleFormSubmit = e => {\n      if(window.confirm(\"글을 쓸 경우 수정이 불가능합니다. 계속 하시겠습니까?\")){\n        e.preventDefault();\n        // aria-label='Close modal'\n        addOrEdit(values);\n        alert(\"글 쓰기 완료\");\n        setShowModal(prev => !prev)\n        setValues({})\n      }\n\n  }\n\n  return (\n    <>\n      {showModal ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <ModalWrapper showModal={showModal}>\n              {/* <ModalImg src={require('./modal.jpg')} alt='camera' /> */}\n              <ModalContent>\n                {/* <h1>Are you ready?</h1>\n                <p>Get exclusive access to our next launch.</p>\n                <button>Join Now</button> */}\n                <div>\n                  <form autoComplete=\"off\" onSubmit={handleFormSubmit}>\n                      <div className=\"form-group input-group\">\n                          {/* <div className=\"input-group-prepend\">\n                              <div className=\"input-group-text\">\n                                  <i className=\"fas fa-user\"></i>\n                              </div>\n                          </div> */}\n                          <text className=\"formtext\">제목</text>\n                          <input className=\"addtext\" name=\"fullName\" value={values.fullName} onChange={handleInputChange}/>\n                      </div>\n                      <div className=\"form-row\">\n                          <div className=\"form-group input-group col-md-6\">\n                              {/* <div className=\"input-group-prepend\">\n                                  <div className=\"input-group-text\">\n                                      <i className=\"fas fa-mobile-alt\"></i>\n                                  </div>\n                              </div> */}\n                              <text className=\"formtext\">비밀번호</text>\n                              <input type=\"password\" className=\"addtext\" name=\"mobile\" value={values.mobile} onChange={handleInputChange}/>\n                          </div>\n                          {/* <div className=\"form-group input-group col-md-6\">\n                              {/* <div className=\"input-group-prepend\">\n                                  <div className=\"input-group-text\">\n                                      <i className=\"fas fa-envelope\"></i>\n                                  </div>\n                              </div> \n                              <input className=\"form-control\" placeholder=\"Email\" name=\"email\" value={values.email} onChange={handleInputChange}/>\n                          </div> */}\n                      </div>\n                      <div className=\"form-group\">\n                      <text className=\"formtext\">내용</text>\n                              <textarea className=\"text\" name=\"address\" value={values.address} onChange={handleInputChange} />\n                      </div>\n                      <div className=\"form-group\">\n                          <input type=\"submit\" className=\"sendbtn\" value={currentId==''?\"Save\":\"Update\"} />\n                      </div>\n                  </form>\n                </div>\n              </ModalContent>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => setShowModal(prev => !prev)}\n              />\n            </ModalWrapper>\n          </animated.div>\n        </Background>\n      ) : null}\n    </>\n  );\n};\n","/home/ubuntu/cs496_week4/src/showContext.js",["248","249","250","251","252","253","254","255"],"import React, {useState,useEffect, Component} from 'react';\nimport './App.css';\nimport { withRouter } from 'react-router-dom';\nimport {useHistory} from 'react-router';\nimport styled from 'styled-components';\nimport { ContextModal } from './components/ContextModal';\nimport { GlobalStyle } from './globalStyles';\nimport './App.css';\nimport plus_mark from './image/plus_mark.png';\nimport { ShowModal } from './components/ShowModal';\n\nconst Container = styled.div`\n  display: center;\n  justify-content: center;\n  align-items: center;\n  //height: 100vh;\n  height : 50%;\n  width : 40%;\n  text-align : center;\n  // vertical-align: middle;\n`;\n\nconst Button = styled.button`\n//min-width: 50px;\n  width : 80px;\n  padding: 16px 32px;\n  // border-radius: 4px;\n  border: none;\n  background: none;\n  color: #fff;\n  font-size: 24px;\n  cursor: pointer;\n`;\n\n// function ShowContext(props) {\n//     const history = useHistory();\n//     const openModal = () => {\n//         // setShowModal(prev => !prev);\n//         // console.log(props.id_result)\n//         // history.push({\n//         //     pathname: '/context',\n//         //     state: {id:props.id_result}\n//         // })\n//         // history.push({\n//         //     pathname : '/context',\n//         //     // state : {addOrEdit: this.props.addOrEdit, current: this.props.current, id: this.props.id_result}\n//         //     state : {addOrEdit:props.addOrEdit}\n//         // })\n//     };\n//     return(\n//         <>\n//              <Container>\n//                 <a onClick={openModal} data-toggle=\"modal\" data-target=\"#myModal\"><button className=\"showwrite\">글 보기</button></a>\n//                  <Button className=\"qnabtn\" onClick={openModal}><img className=\"plus_mark\" src={plus_mark}></img></Button> \n//                   <ShowModal showModal={showModal} setShowModal={setShowModal} addOrEdit={this.props.addOrEdit} current={this.props.current} id={this.props.id_result}/>\n//                 <GlobalStyle />\n//             </Container>\n//             {/* <button onClick={() => {props.history.push(\"/colorselector\")}}></button> */}\n//         </>\n//     );\n// }\nconst ShowContext = (props) => {\n    const [showModal, setShowModal] = useState(false);\n    const openModal = () => {\n        setShowModal(prev => !prev);\n        // props.history.push('/colorselector')\n    };\n    return(\n        <>\n            <Container>\n                <a onClick={openModal} data-toggle=\"modal\" data-target=\"#myModal\"><button className=\"showwrite\">글 보기</button></a>\n                {/* <Button className=\"qnabtn\" onClick={openModal}><img className=\"plus_mark\" src={plus_mark}></img></Button> */}\n                <ShowModal showModal={showModal} setShowModal={setShowModal} addOrEdit={props.addOrEdit} current={props.current} id={props.id_result}/>\n                <GlobalStyle />\n            </Container>\n            {/* <button onClick={() => {props.history.push(\"/colorselector\")}}></button> */}\n        </>\n    );\n}\n\nexport default ShowContext;\n\n\n// function New() {\n//   const [showModal, setShowModal] = useState(false);\n\n//   const openModal = () => {\n//     setShowModal(prev => !prev);\n//   };\n\n//   return (\n//     <>\n//       <Container>\n//         <a onClick={openModal} data-toggle=\"modal\" data-target=\"#myModal\"><img className=\"question_mark\" src={question_mark}></img></a>\n//         {/* <Button className=\"qnabtn\" onClick={openModal}><img className=\"question_mark\" src={question_mark}></img></Button> */}\n//         <Modal showModal={showModal} setShowModal={setShowModal} />\n//         <GlobalStyle />\n//       </Container>\n//     </>\n//   );\n// }\n\n// export default New;\n","/home/ubuntu/cs496_week4/src/Calendar/index.js",["256","257"],"import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Firebase from 'firebase';\nimport CalendarBody from './calendar-body';\nimport CalendarHead from './calendar-head';\n\nimport AddActivity from '../AddActivity';\nimport EditActivity from '../EditActivity';\nimport ActivityList from '../ActivityList';\n\nfunction Calendar(props) {\n\n    const {firebase, authUser} = props;\n\n    let defaultSelectedDay = {\n        day: moment().format(\"D\"),\n        month: moment().month()\n    };\n\n    /*** HOOKS ***/\n    const [dateObject, setdateObject] = useState(moment());\n    const [showMonthTable, setShowMonthTable] = useState(false);\n    const [selectedDay, setSelected] = useState(defaultSelectedDay);\n    // Later add hook for active days from database\n\n    /*** CALENDAR HEAD ***/\n    const allMonths = moment.months();\n    const currentMonth = () => dateObject.format(\"MMMM\");\n    const currentYear = () => dateObject.format(\"YYYY\");\n\n    const setMonth = month => {\n        let monthNo = allMonths.indexOf(month);\n        let newDateObject = Object.assign({}, dateObject);\n        newDateObject = moment(dateObject).set(\"month\", monthNo);\n        setdateObject(newDateObject);\n        setShowMonthTable(false);\n    }\n\n    const toggleMonthSelect = () => setShowMonthTable(!showMonthTable);\n\n    /*** CALENDAR BODY ***/\n    const setSelectedDay = day => {\n        setSelected({\n                day,\n                month: currentMonthNum()\n        });\n         // Later refresh data\n    };\n\n    const currentMonthNum = () => dateObject.month();\n    const daysInMonth = () => dateObject.daysInMonth();\n    const currentDay = () => dateObject.format(\"D\");\n    const actualMonth = () => moment().format(\"MMMM\");\n\n    const firstDayOfMonth = () => moment(dateObject).startOf(\"month\").format(\"d\");\n\n    /*** ADDING AN ACTIVITY ***/\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [snackbarMsg, setSnackbarMsg] = useState(null);\n\n    /*** ACTIVITY LIST ***/\n    const [activities, setActivities] = useState(true);\n    const [loading, setLoading] = useState([]);\n    const [activeDays, setActiveDays] = useState([]);\n\n    const retrieveData = () => {\n        \n        let queryDate = `${selectedDay.day}-${selectedDay.month}-${selectedDay.year}`;\n\n        let ref = Firebase.database().ref(authUser.uid);\n        ref.orderByChild(\"date\").equalTo(queryDate).on(\"value\", snapshot => {\n            let data = snapshot.val();\n            setActivities(data);\n            setLoading(false);\n            // setEditing(false); Add later\n        });\n\n        // Update active days\n         retrieveActiveDays();\n    };\n\n    const retrieveActiveDays = () => {\n        let ref = Firebase.database().ref(authUser.uid);\n        ref.on(\"value\", snapshot => {\n            let data = snapshot.val();\n            if(data){\n            const values = Object.values(data);\n            // Store all active day/month combinations in array for calendar\n            const arr = values.map(obj => {\n                return obj.date.length === 8\n                ? obj.date.slice(0,3)\n                : obj.date.slice(0,4)\n            });\n            console.log(arr);\n            setActiveDays(arr);\n            }\n        });\n    }\n\n    useEffect(() => retrieveData(), [selectedDay]);\n\n    /*** EDIT AN ACTIVITY ***/\n    const [editing, setEditing] = useState(false);\n    const [activity, setActivity] = useState(null);\n    const [activityKey, setActivityKey] = useState(null);\n\n    const editActivity = (activity, i) => {\n        setActivityKey(Object.keys(activities)[i]);\n        setEditing(true);\n        setActivity(activity);\n    }\n\n    return (\n        <Grid container spacing={3}>\n            <Grid item xs={12} md={8} lg={9}>\n                    <CalendarHead\n                        allMonths={allMonths}\n                        currentMonth={currentMonth}\n                        currentYear={currentYear}\n                        setMonth={setMonth}\n                        showMonthTable={showMonthTable}\n                        toggleMonthSelect={toggleMonthSelect}\n                    />\n                    <CalendarBody \n                        firstDayOfMonth={firstDayOfMonth}\n                        daysInMonth={daysInMonth}\n                        currentDay={currentDay}\n                        currentMonth={currentMonth}\n                        currentMonthNum={currentMonthNum}\n                        actualMonth={actualMonth}\n                        setSelectedDay={setSelectedDay}\n                        selectedDay={selectedDay}\n                        weekdays={moment.weekdays()} \n                        activeDays={activeDays}\n                    />\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n                <Paper className=\"paper\">\n                    { editing\n                        ?\n                            <>\n                                <h3>Edit activity on {selectedDay.day}-{selectedDay.month + 1} </h3>\n                                <EditActivity \n                                    activity={activity}\n                                    activityKey={activityKey}\n                                    selectedDay={selectedDay} \n                                    authUser={props.authUser}\n                                    setEditing={setEditing}\n                                    setOpenSnackbar={setOpenSnackbar}\n                                    setSnackbarMsg={setSnackbarMsg}\n                                />\n                            </>\n                        :\n                            <>\n                                <h3>Add activity on {selectedDay.day}-{selectedDay.month + 1} </h3>\n                                <AddActivity \n                                    selectedDay={selectedDay} \n                                    authUser={props.authUser}\n                                    setOpenSnackbar={setOpenSnackbar}\n                                    setSnackbarMsg={setSnackbarMsg}\n                                />\n                            </>\n                    }\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={7}>\n                <Paper className=\"paper\">\n                <h3>Activities on {selectedDay.day}-{selectedDay.month + 1}</h3>\n                <ActivityList\n                    loading={loading}\n                    activities={activities}\n                    authUser={props.authUser}\n                    setOpenSnackbar={setOpenSnackbar}\n                    setSnackbarMsg={setSnackbarMsg}\n                    editActivity={editActivity}\n                    setEditing={setEditing}\n                />\n                </Paper>\n            </Grid>\n            <Snackbar \n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                open={openSnackbar} \n                message={snackbarMsg}\n            />\n        </Grid>\n    )\n};\nexport default Calendar;","/home/ubuntu/cs496_week4/src/Session/index.js",[],"/home/ubuntu/cs496_week4/src/Calendar/calendar-body.js",["258","259","260","261"],"import React from 'react';\nimport './calendar.css';\nimport nextId from \"react-id-generator\";\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst CalendarBody = props => {\n\n    const { firstDayOfMonth, daysInMonth, currentDay, currentMonth, currentMonthNum, selectedDay, activeDays, setSelectedDay, actualMonth, weekdays } = props;\n\n    let blanks = [];\n    for (let i = 0; i < firstDayOfMonth(); i++) {\n        blanks.push(\n            <TableCell key={nextId()}>{\"\"}</TableCell>\n        )\n    }\n\n    let monthDays = [];\n    for (let d = 1; d <= daysInMonth(); d++) {\n        let currDay, selectDay, activeDay;\n\n        // Check if day is today\n        if (currentDay() == d && currentMonth() == actualMonth()) currDay = \"today\";\n\n        // Check if day is selected day\n        if (selectedDay.day == d && currentMonthNum() == selectedDay.month ) selectDay = \"selected-day\";\n        \n        // Check if day found in this month active days\n        let formattedDate = `${d}-${currentMonthNum()}`;\n        if (activeDays.indexOf(formattedDate) !== -1) activeDay = \"active\";\n\n        // console.log(activeDays);\n\n        monthDays.push(\n            <TableCell \n                key={d} \n                className={`week-day ${currDay} ${selectDay}`}\n                onClick={() => setSelectedDay(d)}\n            >\n                <span className={activeDay}>{d}</span>\n            </TableCell>\n        );\n    }\n\n    let totalSlots = [...blanks, ...monthDays];\n    let rows = [];\n    let cells = [];\n\n    totalSlots.forEach((row, i) => {\n        if (i % 7 !== 0) {\n            cells.push(row);\n        } else {\n            rows.push(cells);\n            cells = [];\n            cells.push(row);\n        }\n        if (i === totalSlots.length - 1) {\n            rows.push(cells)\n        }\n    })\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className=\"calendar\">\n                <TableHead>\n                    <TableRow>\n                        {\n                            weekdays.map((day, i) => (\n                                <TableCell key={i}>\n                                    {day}\n                                </TableCell>\n                            ))\n                        }\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        rows.map((day, i) => \n                            <TableRow \n                                key={i}\n                            >\n                                {day}\n                            </TableRow>)\n                    }\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n\nexport default CalendarBody;","/home/ubuntu/cs496_week4/src/Calendar/calendar-head.js",["262"],"import React from 'react';\nimport './calendar.css';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nconst CalendarHead = props => {\n\n    const {allMonths, setMonth, toggleMonthSelect, currentMonth, currentYear, showMonthTable} = props;\n\n    let months = [];\n    \n    allMonths.map(month => (\n        months.push(\n            <TableCell \n                colSpan=\"2\"\n                className=\"month-cell\" \n                style={{textAlign: \"center\"}}\n                key={month}\n                onClick={e => setMonth(month)}\n            >\n                <span>{month}</span>\n            </TableCell>\n        )\n    ));\n\n    let rows = [];\n    let cells = [];\n\n    months.forEach((month, i) => {\n        if (i % 3 !== 0 || i === 0) {\n            cells.push(month);\n        } else {\n            rows.push(cells);\n            cells = [];\n            cells.push(month);\n        }\n    });\n    rows.push(cells);\n\n    let monthList = rows.map((row, i) => <TableRow key={i}>{row}</TableRow>);\n\n    const navStyle = {\n        color:'white',\n        margin: 'auto'\n     };\n    return (\n        <TableContainer component={Paper} className=\"month-selector\">\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell\n                            className=\"toggle-month\" \n                            colSpan=\"4\"\n                            onClick={() => toggleMonthSelect()}\n                        >\n                            {currentMonth()}\n                            <ArrowDropDownIcon\n                                className=\"arrow-icon\"\n                            />\n                        </TableCell>\n                        <TableCell colSpan=\"4\">\n                            {currentYear()}\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                {showMonthTable ?\n                    <TableBody>\n                        <TableRow>\n                            <TableCell \n                                colSpan=\"5\"\n                                style={{textAlign:\"center\"}}\n                                className=\"select-month-title\"\n                                >Select a month</TableCell>\n                        </TableRow> \n                        { monthList }\n                    </TableBody>\n                : null }\n            </Table>\n        </TableContainer>\n    )\n};\n\nexport default CalendarHead;","/home/ubuntu/cs496_week4/src/Session/withAuthentication.js",[],"/home/ubuntu/cs496_week4/src/Session/context.js",[],"/home/ubuntu/cs496_week4/src/EditActivity/index.js",["263","264"],"import React, { useState } from 'react';\nimport { withFirebase } from '../Firebase';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport firebase from 'firebase';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        minWidth: '100%',\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nfunction EditActivity(props) {\n    const classes = useStyles();\n\n    const { authUser, activity, activityKey, setEditing, setOpenSnackbar, setSnackbarMsg, activities } = props;\n    const uid = authUser.uid;\n\n    // Set default activity object\n    const defaultActivity = {\n        name: activity.name,\n        type: activity.type,\n        duration: activity.duration,\n        date: activity.date\n    }\n\n    const [newActivity, setNewActivity] = useState(defaultActivity);\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        setNewActivity({\n            ...newActivity,\n            [name]: value\n        });\n    }\n\n    const handleSlider = e => {\n        const duration = e.target.getAttribute('aria-valuenow');\n        setNewActivity({ ...newActivity, duration: duration });\n    }\n\n    const isValid = newActivity.name === '';\n\n    // Add the activity to firebase via the API made in this app\n    const handleSubmit = e => {\n        if (authUser) {\n            //firebase.updateActivity(uid, newActivity, activityKey);\n\n            firebase.database().ref(authUser.uid).child(activityKey).remove();\n            firebase.database().ref(authUser.uid).push(newActivity);\n            setEditing(false);\n            // Show alert and hide after 3sec\n            setOpenSnackbar(true);\n            setSnackbarMsg('Updated activity');\n            setTimeout(() => {\n                setOpenSnackbar(false)\n            }, 3000)\n        };\n    }\n\n    return (\n        <form noValidate onSubmit={e => e.preventDefault()}>\n            <FormControl className={classes.formControl}>\n                <TextField\n                    style={{ marginTop: '5px' }}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    value={newActivity.name}\n                    label=\"Activity name\"\n                    name=\"name\"\n                    onChange={handleChange}\n                />\n                <div style={{ marginTop: '20px', marginBottom: '30px' }}>\n                    <Typography id=\"discrete-slider\" gutterBottom>\n                        종류\n                    </Typography>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={newActivity.type}\n                        style={{ minWidth: '100%' }}\n                        name=\"type\"\n                        onChange={handleChange}\n                    >\n                        <MenuItem value={1}>자소서</MenuItem>\n                        <MenuItem value={2}>보고서</MenuItem>\n                        <MenuItem value={3}>면접 모의 질문</MenuItem>\n                    </Select>\n                </div>\n                <Typography id=\"discrete-slider\" gutterBottom>\n                    중요도\n                </Typography>\n                <Slider\n                    defaultValue={parseInt(newActivity.duration)}\n                    aria-labelledby=\"discrete-slider\"\n                    valueLabelDisplay=\"auto\"\n                    step={10}\n                    marks\n                    min={10}\n                    max={100}\n                    name=\"duration\"\n                    onChange={handleSlider}\n                    style={{ marginBottom: '20px' }}\n                />\n            </FormControl>\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => handleSubmit('add')}\n                disabled={isValid}\n            >\n                Save activity\n            </Button>\n        </form>\n    )\n};\n\nexport default withFirebase(EditActivity);","/home/ubuntu/cs496_week4/src/AddActivity/index.js",[],"/home/ubuntu/cs496_week4/src/ActivityList/index.js",["265"],"import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport loader from './loader.gif';\nimport firebase from 'firebase';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nfunction ActivityList(props) {\n    const { loading, activities, editActivity, setOpenSnackbar, setSnackbarMsg, setEditing, authUser } = props;\n\n    const deleteActivity = (i) => {\n        // Get key of activity in firebase\n        const activityKey = Object.keys(activities)[i];\n        // Connect to our firebase API\n        const emptyActivity = {\n            date: null,\n            duration: null,\n            type: null,\n            name: null,\n            url: null,\n        };\n\n        firebase.database().ref(authUser.uid).child(activityKey).remove();\n        // Show notification\n        setOpenSnackbar(true);\n        setSnackbarMsg('Deleted activity');\n        setTimeout(() => {\n            setOpenSnackbar(false)\n        }, 3000)\n\n        // stop editing\n        setEditing(false);\n    }\n\n    return (\n        <>\n            {\n                loading === true\n                    ? <img src={loader} alt={loader}></img>\n                    : ''\n            }\n\n            {\n                activities === 'not set' || activities === null\n                    ? <p>No activities added yet.</p>\n                    :\n                    <TableContainer component={Paper} >\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>활동명</TableCell>\n                                    <TableCell>종류</TableCell>\n                                    <TableCell>중요도</TableCell>\n                                    <TableCell>URL</TableCell>\n                                    <TableCell>Actions</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    Object.values(activities).map((activity, i) => {\n                                        let { name, type, duration, url } = activity;\n                                        switch (activity.type) {\n                                            case 1:\n                                                type = \"자소서\";\n                                                break;\n                                            case 2:\n                                                type = \"보고서\";\n                                                break;\n                                            case 3:\n                                                type = \"면접 모의 질문\";\n                                                break;\n                                            default:\n                                                type = \"Not set\";\n                                        };\n                                        return (\n                                            <TableRow key={i}>\n                                                <TableCell>{name}</TableCell>\n                                                <TableCell>{type}</TableCell>\n                                                <TableCell>{duration}</TableCell>\n                                                <TableCell>{url}</TableCell>\n                                                <TableCell>\n                                                    <DeleteIcon\n                                                        onClick={e => deleteActivity(i)}\n                                                    />\n                                                    <EditIcon\n                                                        onClick={e => editActivity(activity, i)}\n                                                        style={{ marginLeft: \"20px\" }}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })\n                                }\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n            }\n        </>\n    )\n};\nexport default withFirebase(ActivityList);","/home/ubuntu/cs496_week4/src/Firebase/index.js",[],"/home/ubuntu/cs496_week4/src/Firebase/firebase.js",[],"/home/ubuntu/cs496_week4/src/Firebase/context.js",[],{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","severity":1,"message":"271","line":4,"column":8,"nodeType":"272","messageId":"273","endLine":4,"endColumn":15},{"ruleId":"270","severity":1,"message":"274","line":5,"column":8,"nodeType":"272","messageId":"273","endLine":5,"endColumn":12},{"ruleId":"270","severity":1,"message":"275","line":7,"column":8,"nodeType":"272","messageId":"273","endLine":7,"endColumn":11},{"ruleId":"270","severity":1,"message":"276","line":9,"column":8,"nodeType":"272","messageId":"273","endLine":9,"endColumn":16},{"ruleId":"270","severity":1,"message":"277","line":10,"column":9,"nodeType":"272","messageId":"273","endLine":10,"endColumn":17},{"ruleId":"270","severity":1,"message":"278","line":10,"column":19,"nodeType":"272","messageId":"273","endLine":10,"endColumn":29},{"ruleId":"270","severity":1,"message":"279","line":11,"column":27,"nodeType":"272","messageId":"273","endLine":11,"endColumn":33},{"ruleId":"270","severity":1,"message":"280","line":11,"column":35,"nodeType":"272","messageId":"273","endLine":11,"endColumn":41},{"ruleId":"270","severity":1,"message":"281","line":11,"column":43,"nodeType":"272","messageId":"273","endLine":11,"endColumn":48},{"ruleId":"270","severity":1,"message":"282","line":11,"column":50,"nodeType":"272","messageId":"273","endLine":11,"endColumn":54},{"ruleId":"270","severity":1,"message":"283","line":12,"column":10,"nodeType":"272","messageId":"273","endLine":12,"endColumn":20},{"ruleId":"284","severity":1,"message":"285","line":38,"column":17,"nodeType":"286","messageId":"287","endLine":47,"endColumn":18},{"ruleId":"284","severity":1,"message":"285","line":58,"column":17,"nodeType":"286","messageId":"287","endLine":66,"endColumn":18},{"ruleId":"288","severity":1,"message":"289","line":86,"column":8,"nodeType":"290","endLine":86,"endColumn":10,"suggestions":"291"},{"ruleId":"270","severity":1,"message":"292","line":2,"column":8,"nodeType":"272","messageId":"273","endLine":2,"endColumn":12},{"ruleId":"270","severity":1,"message":"293","line":7,"column":8,"nodeType":"272","messageId":"273","endLine":7,"endColumn":17},{"ruleId":"270","severity":1,"message":"294","line":1,"column":17,"nodeType":"272","messageId":"273","endLine":1,"endColumn":26},{"ruleId":"270","severity":1,"message":"295","line":4,"column":8,"nodeType":"272","messageId":"273","endLine":4,"endColumn":24},{"ruleId":"270","severity":1,"message":"296","line":5,"column":8,"nodeType":"272","messageId":"273","endLine":5,"endColumn":16},{"ruleId":"270","severity":1,"message":"297","line":7,"column":8,"nodeType":"272","messageId":"273","endLine":7,"endColumn":21},{"ruleId":"270","severity":1,"message":"298","line":8,"column":8,"nodeType":"272","messageId":"273","endLine":8,"endColumn":22},{"ruleId":"270","severity":1,"message":"299","line":28,"column":16,"nodeType":"272","messageId":"273","endLine":28,"endColumn":20},{"ruleId":"270","severity":1,"message":"300","line":30,"column":15,"nodeType":"272","messageId":"273","endLine":30,"endColumn":32},{"ruleId":"270","severity":1,"message":"301","line":6,"column":8,"nodeType":"272","messageId":"273","endLine":6,"endColumn":18},{"ruleId":"270","severity":1,"message":"276","line":9,"column":8,"nodeType":"272","messageId":"273","endLine":9,"endColumn":16},{"ruleId":"270","severity":1,"message":"302","line":19,"column":7,"nodeType":"272","messageId":"273","endLine":19,"endColumn":13},{"ruleId":"270","severity":1,"message":"303","line":30,"column":7,"nodeType":"272","messageId":"273","endLine":30,"endColumn":15},{"ruleId":"304","severity":1,"message":"305","line":45,"column":9,"nodeType":"306","endLine":45,"endColumn":75},{"ruleId":"307","severity":1,"message":"308","line":45,"column":75,"nodeType":"306","endLine":45,"endColumn":126},{"ruleId":"270","severity":1,"message":"280","line":7,"column":3,"nodeType":"272","messageId":"273","endLine":7,"endColumn":9},{"ruleId":"270","severity":1,"message":"281","line":8,"column":3,"nodeType":"272","messageId":"273","endLine":8,"endColumn":8},{"ruleId":"270","severity":1,"message":"309","line":12,"column":8,"nodeType":"272","messageId":"273","endLine":12,"endColumn":12},{"ruleId":"270","severity":1,"message":"310","line":14,"column":8,"nodeType":"272","messageId":"273","endLine":14,"endColumn":11},{"ruleId":"270","severity":1,"message":"311","line":15,"column":8,"nodeType":"272","messageId":"273","endLine":15,"endColumn":14},{"ruleId":"270","severity":1,"message":"312","line":16,"column":8,"nodeType":"272","messageId":"273","endLine":16,"endColumn":15},{"ruleId":"270","severity":1,"message":"313","line":17,"column":8,"nodeType":"272","messageId":"273","endLine":17,"endColumn":18},{"ruleId":"270","severity":1,"message":"314","line":18,"column":8,"nodeType":"272","messageId":"273","endLine":18,"endColumn":18},{"ruleId":"270","severity":1,"message":"315","line":19,"column":8,"nodeType":"272","messageId":"273","endLine":19,"endColumn":13},{"ruleId":"270","severity":1,"message":"316","line":21,"column":8,"nodeType":"272","messageId":"273","endLine":21,"endColumn":16},{"ruleId":"270","severity":1,"message":"317","line":22,"column":8,"nodeType":"272","messageId":"273","endLine":22,"endColumn":25},{"ruleId":"270","severity":1,"message":"318","line":29,"column":7,"nodeType":"272","messageId":"273","endLine":29,"endColumn":12},{"ruleId":"270","severity":1,"message":"319","line":35,"column":9,"nodeType":"272","messageId":"273","endLine":35,"endColumn":25},{"ruleId":"270","severity":1,"message":"320","line":36,"column":9,"nodeType":"272","messageId":"273","endLine":36,"endColumn":26},{"ruleId":"270","severity":1,"message":"321","line":38,"column":9,"nodeType":"272","messageId":"273","endLine":38,"endColumn":16},{"ruleId":"322","severity":1,"message":"323","line":50,"column":49,"nodeType":"324","messageId":"325","endLine":50,"endColumn":50},{"ruleId":"270","severity":1,"message":"282","line":3,"column":10,"nodeType":"272","messageId":"273","endLine":3,"endColumn":14},{"ruleId":"270","severity":1,"message":"326","line":4,"column":8,"nodeType":"272","messageId":"273","endLine":4,"endColumn":19},{"ruleId":"270","severity":1,"message":"276","line":7,"column":8,"nodeType":"272","messageId":"273","endLine":7,"endColumn":16},{"ruleId":"270","severity":1,"message":"327","line":9,"column":10,"nodeType":"272","messageId":"273","endLine":9,"endColumn":19},{"ruleId":"270","severity":1,"message":"328","line":10,"column":10,"nodeType":"272","messageId":"273","endLine":10,"endColumn":21},{"ruleId":"270","severity":1,"message":"297","line":11,"column":8,"nodeType":"272","messageId":"273","endLine":11,"endColumn":21},{"ruleId":"270","severity":1,"message":"329","line":19,"column":12,"nodeType":"272","messageId":"273","endLine":19,"endColumn":16},{"ruleId":"270","severity":1,"message":"330","line":19,"column":18,"nodeType":"272","messageId":"273","endLine":19,"endColumn":25},{"ruleId":"270","severity":1,"message":"331","line":20,"column":9,"nodeType":"272","messageId":"273","endLine":20,"endColumn":18},{"ruleId":"332","severity":1,"message":"333","line":34,"column":21,"nodeType":"334","messageId":"335","endLine":34,"endColumn":23},{"ruleId":"270","severity":1,"message":"336","line":53,"column":11,"nodeType":"272","messageId":"273","endLine":53,"endColumn":19},{"ruleId":"270","severity":1,"message":"337","line":64,"column":11,"nodeType":"272","messageId":"273","endLine":64,"endColumn":20},{"ruleId":"270","severity":1,"message":"302","line":75,"column":11,"nodeType":"272","messageId":"273","endLine":75,"endColumn":17},{"ruleId":"270","severity":1,"message":"338","line":86,"column":12,"nodeType":"272","messageId":"273","endLine":86,"endColumn":21},{"ruleId":"270","severity":1,"message":"339","line":87,"column":11,"nodeType":"272","messageId":"273","endLine":87,"endColumn":20},{"ruleId":"270","severity":1,"message":"340","line":94,"column":11,"nodeType":"272","messageId":"273","endLine":94,"endColumn":18},{"ruleId":"270","severity":1,"message":"341","line":1,"column":27,"nodeType":"272","messageId":"273","endLine":1,"endColumn":36},{"ruleId":"270","severity":1,"message":"282","line":3,"column":10,"nodeType":"272","messageId":"273","endLine":3,"endColumn":14},{"ruleId":"270","severity":1,"message":"302","line":21,"column":7,"nodeType":"272","messageId":"273","endLine":21,"endColumn":13},{"ruleId":"304","severity":1,"message":"305","line":42,"column":17,"nodeType":"306","endLine":42,"endColumn":83},{"ruleId":"307","severity":1,"message":"308","line":42,"column":83,"nodeType":"306","endLine":42,"endColumn":126},{"ruleId":"342","severity":1,"message":"343","line":32,"column":15,"nodeType":"306","endLine":32,"endColumn":77},{"ruleId":"270","severity":1,"message":"344","line":130,"column":9,"nodeType":"272","messageId":"273","endLine":130,"endColumn":26},{"ruleId":"270","severity":1,"message":"345","line":138,"column":9,"nodeType":"272","messageId":"273","endLine":138,"endColumn":25},{"ruleId":"270","severity":1,"message":"346","line":147,"column":8,"nodeType":"272","messageId":"273","endLine":147,"endColumn":17},{"ruleId":"270","severity":1,"message":"329","line":148,"column":10,"nodeType":"272","messageId":"273","endLine":148,"endColumn":14},{"ruleId":"270","severity":1,"message":"330","line":148,"column":16,"nodeType":"272","messageId":"273","endLine":148,"endColumn":23},{"ruleId":"288","severity":1,"message":"347","line":171,"column":6,"nodeType":"290","endLine":171,"endColumn":8,"suggestions":"348"},{"ruleId":"332","severity":1,"message":"333","line":195,"column":17,"nodeType":"334","messageId":"335","endLine":195,"endColumn":19},{"ruleId":"270","severity":1,"message":"349","line":226,"column":9,"nodeType":"272","messageId":"273","endLine":226,"endColumn":16},{"ruleId":"270","severity":1,"message":"350","line":5,"column":8,"nodeType":"272","messageId":"273","endLine":5,"endColumn":16},{"ruleId":"270","severity":1,"message":"350","line":5,"column":8,"nodeType":"272","messageId":"273","endLine":5,"endColumn":16},{"ruleId":"332","severity":1,"message":"333","line":195,"column":84,"nodeType":"334","messageId":"335","endLine":195,"endColumn":86},{"ruleId":"270","severity":1,"message":"341","line":1,"column":25,"nodeType":"272","messageId":"273","endLine":1,"endColumn":34},{"ruleId":"270","severity":1,"message":"294","line":1,"column":36,"nodeType":"272","messageId":"273","endLine":1,"endColumn":45},{"ruleId":"270","severity":1,"message":"283","line":3,"column":10,"nodeType":"272","messageId":"273","endLine":3,"endColumn":20},{"ruleId":"270","severity":1,"message":"278","line":4,"column":9,"nodeType":"272","messageId":"273","endLine":4,"endColumn":19},{"ruleId":"270","severity":1,"message":"351","line":6,"column":10,"nodeType":"272","messageId":"273","endLine":6,"endColumn":22},{"ruleId":"270","severity":1,"message":"352","line":9,"column":8,"nodeType":"272","messageId":"273","endLine":9,"endColumn":17},{"ruleId":"270","severity":1,"message":"302","line":23,"column":7,"nodeType":"272","messageId":"273","endLine":23,"endColumn":13},{"ruleId":"304","severity":1,"message":"305","line":71,"column":17,"nodeType":"306","endLine":71,"endColumn":83},{"ruleId":"270","severity":1,"message":"353","line":17,"column":12,"nodeType":"272","messageId":"273","endLine":17,"endColumn":20},{"ruleId":"288","severity":1,"message":"354","line":104,"column":37,"nodeType":"290","endLine":104,"endColumn":50,"suggestions":"355"},{"ruleId":"332","severity":1,"message":"333","line":29,"column":26,"nodeType":"334","messageId":"335","endLine":29,"endColumn":28},{"ruleId":"332","severity":1,"message":"333","line":29,"column":49,"nodeType":"334","messageId":"335","endLine":29,"endColumn":51},{"ruleId":"332","severity":1,"message":"333","line":32,"column":29,"nodeType":"334","messageId":"335","endLine":32,"endColumn":31},{"ruleId":"332","severity":1,"message":"333","line":32,"column":55,"nodeType":"334","messageId":"335","endLine":32,"endColumn":57},{"ruleId":"270","severity":1,"message":"303","line":49,"column":11,"nodeType":"272","messageId":"273","endLine":49,"endColumn":19},{"ruleId":"270","severity":1,"message":"356","line":26,"column":91,"nodeType":"272","messageId":"273","endLine":26,"endColumn":101},{"ruleId":"270","severity":1,"message":"357","line":27,"column":11,"nodeType":"272","messageId":"273","endLine":27,"endColumn":14},{"ruleId":"270","severity":1,"message":"358","line":22,"column":15,"nodeType":"272","messageId":"273","endLine":22,"endColumn":28},"no-native-reassign",["359"],"no-negated-in-lhs",["360"],"no-unused-vars","'App_tmp' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'Nav' is defined but never used.","'Question' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["361"],"'logo' is defined but never used.","'ShowModal' is defined but never used.","'Component' is defined but never used.","'withFirebaseAuth' is defined but never used.","'firebase' is defined but never used.","'question_mark' is defined but never used.","'firebaseConfig' is defined but never used.","'show' is assigned a value but never used.","'closeModalHandler' is assigned a value but never used.","'AddContext' is defined but never used.","'Button' is assigned a value but never used.","'navStyle' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'clsx' is defined but never used.","'Box' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'IconButton' is defined but never used.","'Badge' is defined but never used.","'MenuIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'match' is assigned a value but never used.","'handleDrawerOpen' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","'signOut' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'ContactForm' is defined but never used.","'InfoModal' is defined but never used.","'GlobalStyle' is defined but never used.","'comp' is assigned a value but never used.","'setComp' is assigned a value but never used.","'id_result' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'onDelete' is assigned a value but never used.","'Container' is assigned a value but never used.","'showModal' is assigned a value but never used.","'openModal' is assigned a value but never used.","'history' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'handleInputChange' is assigned a value but never used.","'handleFormSubmit' is assigned a value but never used.","'currentId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["362"],"'updates' is assigned a value but never used.","'modalimg' is defined but never used.","'ContextModal' is defined but never used.","'plus_mark' is defined but never used.","'firebase' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveData'. Either include it or remove the dependency array.",["363"],"'activities' is assigned a value but never used.","'uid' is assigned a value but never used.","'emptyActivity' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},"Update the dependencies array to be: [authListener]",{"range":"370","text":"371"},"Update the dependencies array to be: [id]",{"range":"372","text":"373"},"Update the dependencies array to be: [retrieveData, selectedDay]",{"range":"374","text":"375"},[2572,2574],"[authListener]",[3881,3883],"[id]",[3424,3437],"[retrieveData, selectedDay]"]