[{"/home/ubuntu/cs496_week4/src/index.js":"1","/home/ubuntu/cs496_week4/src/App.js":"2","/home/ubuntu/cs496_week4/src/reportWebVitals.js":"3","/home/ubuntu/cs496_week4/src/Nav.js":"4","/home/ubuntu/cs496_week4/src/Shop.js":"5","/home/ubuntu/cs496_week4/src/itemDetail.js":"6","/home/ubuntu/cs496_week4/src/firebaseConfig.js":"7","/home/ubuntu/cs496_week4/src/Hero.js":"8","/home/ubuntu/cs496_week4/src/Login.js":"9","/home/ubuntu/cs496_week4/src/App_tmp.js":"10","/home/ubuntu/cs496_week4/src/New.js":"11","/home/ubuntu/cs496_week4/src/CountWord.js":"12","/home/ubuntu/cs496_week4/src/components/Modal.js":"13","/home/ubuntu/cs496_week4/src/globalStyles.js":"14","/home/ubuntu/cs496_week4/src/question.js":"15","/home/ubuntu/cs496_week4/src/firebase.js":"16","/home/ubuntu/cs496_week4/src/addContext.js":"17","/home/ubuntu/cs496_week4/src/components/ContextModal.js":"18","/home/ubuntu/cs496_week4/src/components/contactForm.js":"19","/home/ubuntu/cs496_week4/src/components/InfoModal.js":"20","/home/ubuntu/cs496_week4/src/showContext.js":"21","/home/ubuntu/cs496_week4/src/components/ShowModal.js":"22","/home/ubuntu/cs496_week4/src/components/ShowModel.js":"23","/home/ubuntu/cs496_week4/src/components/ImageSlider.js":"24","/home/ubuntu/cs496_week4/src/components/SliderData.js":"25","/home/ubuntu/cs496_week4/src/common/footer.js":"26","/home/ubuntu/cs496_week4/src/components/notFound.js":"27"},{"size":500,"mtime":1611235609045,"results":"28","hashOfConfig":"29"},{"size":3288,"mtime":1611581438676,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1611235609045,"results":"31","hashOfConfig":"29"},{"size":3405,"mtime":1611645853144,"results":"32","hashOfConfig":"29"},{"size":243,"mtime":1611302255255,"results":"33","hashOfConfig":"29"},{"size":598,"mtime":1611225824467,"results":"34","hashOfConfig":"29"},{"size":516,"mtime":1611405175211,"results":"35","hashOfConfig":"29"},{"size":1405,"mtime":1611644739219,"results":"36","hashOfConfig":"29"},{"size":1740,"mtime":1611557629528,"results":"37","hashOfConfig":"29"},{"size":813,"mtime":1611497709167,"results":"38","hashOfConfig":"29"},{"size":6637,"mtime":1611645293998,"results":"39","hashOfConfig":"29"},{"size":905,"mtime":1611564654972,"results":"40","hashOfConfig":"29"},{"size":4521,"mtime":1611561362701,"results":"41","hashOfConfig":"29"},{"size":211,"mtime":1611311132945,"results":"42","hashOfConfig":"29"},{"size":1232,"mtime":1611645639713,"results":"43","hashOfConfig":"29"},{"size":525,"mtime":1611405327946,"results":"44","hashOfConfig":"29"},{"size":2186,"mtime":1611496855896,"results":"45","hashOfConfig":"29"},{"size":6357,"mtime":1611495698780,"results":"46","hashOfConfig":"29"},{"size":1778,"mtime":1611321017082,"results":"47","hashOfConfig":"29"},{"size":4484,"mtime":1611415233317,"results":"48","hashOfConfig":"29"},{"size":3631,"mtime":1611548161833,"results":"49","hashOfConfig":"29"},{"size":10644,"mtime":1611500339444,"results":"50","hashOfConfig":"29"},{"size":242,"mtime":1611547823376,"results":"51","hashOfConfig":"29"},{"size":1130,"mtime":1611583545701,"results":"52","hashOfConfig":"29"},{"size":972,"mtime":1611583543773,"results":"53","hashOfConfig":"29"},{"size":464,"mtime":1611641477805,"results":"54","hashOfConfig":"29"},{"size":261,"mtime":1611641654785,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"c0tyar",{"filePath":"59","messages":"60","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ubuntu/cs496_week4/src/index.js",[],["121","122"],"/home/ubuntu/cs496_week4/src/App.js",["123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"import React, { useState, useEffect } from 'react';\nimport fire from './firebaseConfig';\nimport './App.css';\nimport App_tmp from './App_tmp';\nimport Home from './Hero';\nimport Hero from './Hero';\nimport Nav from './Nav';\nimport Login from './Login';\nimport Question from './question';\nimport {Redirect, useHistory} from 'react-router';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\n\nconst App = ({history}) => {\n    const [user, setUser] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [hasAccount, setHasAccount] = useState(false);\n\n    const clearInputs = () => {\n        setEmail('');\n        setPassword('');\n    }\n\n    const clearErrors = () => {\n        setEmailError('');\n        setPasswordError('');\n    }\n\n    const handleLogin = () => {\n        clearErrors();\n        fire\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .catch((err) => {\n                switch(err.code){\n                    case \"auth/invalid-email\":\n                    case \"auth/user-disabled\":\n                    case \"auth/user-not-found\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/wrong-password\":\n                        setPasswordError(err.message);\n                        break;\n                }\n            });\n\n    }\n\n    const handleSignup = () => {\n        clearErrors();\n        fire\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .catch((err) => {\n                switch(err.code){\n                    case \"auth/email-already-in-use\":\n                    case \"auth/invalid-email\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/weak-password\":\n                        setPasswordError(err.message);\n                        break;\n                }\n            });\n    }\n    // const history = useHistory();\n\n    const handleLogout = () => {\n        fire.auth().signOut();\n        \n    }\n\n    const authListener = () => {\n        fire.auth().onAuthStateChanged((user) =>{\n            if(user) {\n                clearInputs();\n                setUser(user);\n            } else{\n                setUser(\"\");\n            }\n        });\n    }\n\n    var email_result = user.email\n    useEffect(() => {\n        authListener();\n    }, []);\n    return (\n        <div className=\"App\">\n            {user ?(\n                <Hero handleLogout={handleLogout} email_login={email_result.split(\"@\")[0]}/>\n            ) : (\n                <Login\n                email={email}\n                setEmail={setEmail}\n                password={password}\n                setPassword={setPassword}\n                handleLogin={handleLogin}\n                handleSignup={handleSignup}\n                hasAccount={hasAccount}\n                setHasAccount={setHasAccount}\n                emailError={emailError}\n                passwordError={passwordError} />\n            )}\n        </div>\n    );\n};\n\nexport default App;","/home/ubuntu/cs496_week4/src/reportWebVitals.js",[],"/home/ubuntu/cs496_week4/src/Nav.js",["137","138","139","140","141","142","143"],"/home/ubuntu/cs496_week4/src/Shop.js",["144","145","146"],"import React, {useState,useEffect} from 'react';\r\nimport './App.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Shop() {\r\n    return(\r\n        <div>\r\n            <h1>Shop Page</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Shop;","/home/ubuntu/cs496_week4/src/itemDetail.js",["147","148"],"/home/ubuntu/cs496_week4/src/firebaseConfig.js",[],"/home/ubuntu/cs496_week4/src/Hero.js",["149","150"],"/home/ubuntu/cs496_week4/src/Login.js",[],"/home/ubuntu/cs496_week4/src/App_tmp.js",["151","152"],"import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Nav from './Nav';\nimport countword from './CountWord';\nimport Shop from './Shop';\nimport ShowModal from './components/ShowModal'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Nav />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/countword\" component={countword} />\n            <Route path=\"/shop\" component={Shop} />\n            <Route path=\"/context\" component={Shop} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst Home = () => (\n  <div>\n    <h1>Home Page</h1>\n  </div>\n)\n\nexport default App;\n","/home/ubuntu/cs496_week4/src/New.js",["153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168"],"/home/ubuntu/cs496_week4/src/CountWord.js",[],"/home/ubuntu/cs496_week4/src/components/Modal.js",["169"],"import React, { useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport modalimg from '../components/modal.jpg';\nimport emailjs from 'emailjs-com';\nimport '../App.css';\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  // background: rgba(0, 0, 0, 0.8);\n  // background-size : cover;\n  position: fixed;\n  display: center;\n  justify-content: center;\n  align-items: center;\n`;\n\n//이부분 width 다시\nconst ModalWrapper = styled.div`\n  width: 700px;\n  height: 100%;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  //grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n  \n`;\n\n// const ModalImg = styled.img`\n//   width: 100%;\n//   height: 100%;\n//   border-radius: 10px 0 0 10px;\n//   background: #000;\n// `;\n\nconst ModalContent = styled.div`\n  //display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  //line-height: 1.8;\n  color: #141414;\n\n  p {\n    margin-bottom: 1rem;\n  }\n\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\nexport const Modal = ({ showModal, setShowModal }) => {\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 0\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translate(20%,10%)` : `translate(-100%,-100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(\n    () => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  function sendEmail(e) {\n    e.preventDefault();\n    setShowModal(prev => !prev)\n    alert(\"전송 완료\")\n    emailjs.sendForm('gmail', 'template_adtnacg', e.target, 'user_m2DzYtnjmQ2Uf4uaPcU36')\n        .then((result) =>{\n            console.log(result.text);\n        }, (error) => {\n            console.log(error.text);\n        });\n        e.target.reset()\n}\n\n  return (\n    <>\n    {showModal ? (\n      <Background onClick={closeModal} ref={modalRef}>\n        <animated.div style={animation}>\n          <ModalWrapper showModal={showModal}>\n            {/* <ModalImg src={require('./modal.jpg')} alt='camera' /> */}\n            <ModalContent>\n            <div>\n              <div className=\"container\">\n                  <div className=\"mailTitle\">의견을 말씀해주세요</div>\n                  <form onSubmit={sendEmail}>\n                      <div className=\"row pt-5 mx-auto\">\n                          <div className=\"col-8 form-group mx-auto\">\n                              <input type=\"text\" className=\"name\" placeholder=\"  Name\" name=\"name\" />\n                          </div>\n                          <div className=\"col-8 form-group pt-2 mx-auto\">\n                              <input type=\"email\" className=\"name\" placeholder=\"  Email Address\" name=\"email\" />\n                          </div>\n                          <div className=\"col-8 form-group pt-2 mx-auto\">\n                              <input type=\"text\" className=\"name\" placeholder=\"  Subject\" name=\"subject\" />\n                          </div>\n                          <div className=\"col-8 form-group pt-2 mx-auto\">\n                              <textarea className=\"sendmessage\" id=\"\" cols=\"30\" rows=\"8\" placeholder=\"  Your message\" name=\"message\"></textarea>\n                          </div>\n                          <div className=\"col-8 pt-3 mx-auto\">\n                              <input type=\"submit\" className=\"sendbtn\" value=\"Send Message\" />\n                          </div>\n                      </div>\n                  </form>\n              </div>\n          </div>\n            </ModalContent>\n            <CloseModalButton\n              aria-label='Close modal'\n              onClick={() => setShowModal(prev => !prev)}\n            />\n          </ModalWrapper>\n        </animated.div>\n      </Background>\n    ) : null}\n  </>\n  );\n};\n","/home/ubuntu/cs496_week4/src/globalStyles.js",[],"/home/ubuntu/cs496_week4/src/question.js",["170","171","172"],"/home/ubuntu/cs496_week4/src/firebase.js",[],"/home/ubuntu/cs496_week4/src/addContext.js",["173","174","175","176","177"],"import React, {useState,useEffect} from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ContextModal } from './components/ContextModal';\nimport { GlobalStyle } from './globalStyles';\nimport './App.css';\nimport plus_mark from './image/plus_mark.png';\n\nconst Container = styled.div`\n  display: center;\n  justify-content: center;\n  align-items: center;\n  //height: 100vh;\n  height : 50%;\n  width : 40%;\n  text-align : center;\n  // vertical-align: middle;\n`;\n\nconst Button = styled.button`\n//min-width: 50px;\n  width : 80px;\n  padding: 16px 32px;\n  // border-radius: 4px;\n  border: none;\n  background: none;\n  color: #fff;\n  font-size: 24px;\n  cursor: pointer;\n`;\n\n\nconst AddContext = (props) => {\n    const [showModal, setShowModal] = useState(false);\n    const openModal = () => {\n        setShowModal(prev => !prev);\n    };\n    return(\n        <>\n            <Container>\n                <a onClick={openModal} data-toggle=\"modal\" data-target=\"#myModal\"><img className=\"plus_mark\" src={plus_mark}></img><br></br><text className=\"newwrite\">새 글 쓰기</text></a>\n                {/* <Button className=\"qnabtn\" onClick={openModal}><img className=\"plus_mark\" src={plus_mark}></img></Button> */}\n                <ContextModal showModal={showModal} setShowModal={setShowModal} addOrEdit={props.addOrEdit} currentId={props.currentId} contactObjects={props.contactObjects}/>\n                <GlobalStyle />\n            </Container>\n        </>\n    );\n}\n\nexport default AddContext;\n\n\n// function New() {\n//   const [showModal, setShowModal] = useState(false);\n\n//   const openModal = () => {\n//     setShowModal(prev => !prev);\n//   };\n\n//   return (\n//     <>\n//       <Container>\n//         <a onClick={openModal} data-toggle=\"modal\" data-target=\"#myModal\"><img className=\"question_mark\" src={question_mark}></img></a>\n//         {/* <Button className=\"qnabtn\" onClick={openModal}><img className=\"question_mark\" src={question_mark}></img></Button> */}\n//         <Modal showModal={showModal} setShowModal={setShowModal} />\n//         <GlobalStyle />\n//       </Container>\n//     </>\n//   );\n// }\n\n// export default New;\n","/home/ubuntu/cs496_week4/src/components/ContextModal.js",["178"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport '../App.css'\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  // background: rgba(0, 0, 0, 0.8);\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalWrapper = styled.div`\n  width: 800px;\n  height: 500px;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n`;\n\n// const ModalImg = styled.img`\n//   width: 100%;\n//   height: 100%;\n//   border-radius: 10px 0 0 10px;\n//   background: #000;\n// `;\n\nconst ModalContent = styled.div`\n  display: absolute;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width : 150%;\n  height : 100%;\n  align-self : center;\n  line-height: 1.8;\n  color: #141414;\n\n  p {\n    margin-bottom: 1rem;\n  }\n\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\nexport const ContextModal = ({ showModal, setShowModal, addOrEdit, currentId, contactObjects }) => {\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 0\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translate(-105%, -25%)` : `translate(-100%,-100%)`\n    // transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(\n    () => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  const initialFieldValues = {\n    fullName : '',\n    mobile : '',\n    email : '',\n    address : ''\n  }\n\n  var [values, setValues] = useState(initialFieldValues)\n  console.log(values)\n  // useEffect(() => {\n  //     if(props.currentId=='')\n  //         setValues({\n  //             ...initialFieldValues\n  //         })\n  //     else\n  //         setValues({\n  //             ...props.contactObjects[props.currentId]\n  //         })\n      \n  // }, [props.currentId, props.contactObjects])\n\n  const handleInputChange = e => {\n      var { name, value} = e.target\n      setValues({\n          ...values,\n          [name] : value\n      })\n  }\n\n  const handleFormSubmit = e => {\n      if(window.confirm(\"글을 쓸 경우 수정이 불가능합니다. 계속 하시겠습니까?\")){\n        e.preventDefault();\n        // aria-label='Close modal'\n        addOrEdit(values);\n        alert(\"글 쓰기 완료\");\n        setShowModal(prev => !prev)\n        setValues({})\n      }\n\n  }\n\n  return (\n    <>\n      {showModal ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <ModalWrapper showModal={showModal}>\n              {/* <ModalImg src={require('./modal.jpg')} alt='camera' /> */}\n              <ModalContent>\n                {/* <h1>Are you ready?</h1>\n                <p>Get exclusive access to our next launch.</p>\n                <button>Join Now</button> */}\n                <div>\n                  <form autoComplete=\"off\" onSubmit={handleFormSubmit}>\n                      <div className=\"form-group input-group\">\n                          {/* <div className=\"input-group-prepend\">\n                              <div className=\"input-group-text\">\n                                  <i className=\"fas fa-user\"></i>\n                              </div>\n                          </div> */}\n                          <text className=\"formtext\">제목</text>\n                          <input className=\"addtext\" name=\"fullName\" value={values.fullName} onChange={handleInputChange}/>\n                      </div>\n                      <div className=\"form-row\">\n                          <div className=\"form-group input-group col-md-6\">\n                              {/* <div className=\"input-group-prepend\">\n                                  <div className=\"input-group-text\">\n                                      <i className=\"fas fa-mobile-alt\"></i>\n                                  </div>\n                              </div> */}\n                              <text className=\"formtext\">비밀번호</text>\n                              <input type=\"password\" className=\"addtext\" name=\"mobile\" value={values.mobile} onChange={handleInputChange}/>\n                          </div>\n                          {/* <div className=\"form-group input-group col-md-6\">\n                              {/* <div className=\"input-group-prepend\">\n                                  <div className=\"input-group-text\">\n                                      <i className=\"fas fa-envelope\"></i>\n                                  </div>\n                              </div> \n                              <input className=\"form-control\" placeholder=\"Email\" name=\"email\" value={values.email} onChange={handleInputChange}/>\n                          </div> */}\n                      </div>\n                      <div className=\"form-group\">\n                      <text className=\"formtext\">내용</text>\n                              <textarea className=\"text\" name=\"address\" value={values.address} onChange={handleInputChange} />\n                      </div>\n                      <div className=\"form-group\">\n                          <input type=\"submit\" className=\"sendbtn\" value={currentId==''?\"Save\":\"Update\"} />\n                      </div>\n                  </form>\n                </div>\n              </ModalContent>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => setShowModal(prev => !prev)}\n              />\n            </ModalWrapper>\n          </animated.div>\n        </Background>\n      ) : null}\n    </>\n  );\n};\n","/home/ubuntu/cs496_week4/src/components/contactForm.js",[],"/home/ubuntu/cs496_week4/src/components/InfoModal.js",["179"],"import React, { useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport modalimg from '../components/modal.jpg';\nimport emailjs from 'emailjs-com';\nimport '../App.css';\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  // background: rgba(0, 0, 0, 0.8);\n  // background-size : cover;\n  position: fixed;\n  display: center;\n  justify-content: center;\n  align-items: center;\n`;\n\n//이부분 width 다시\nconst ModalWrapper = styled.div`\n  width: 700px;\n  height: 100%;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  //grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n  \n`;\n\n// const ModalImg = styled.img`\n//   width: 100%;\n//   height: 100%;\n//   border-radius: 10px 0 0 10px;\n//   background: #000;\n// `;\n\nconst ModalContent = styled.div`\n  //display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  //line-height: 1.8;\n  color: #141414;\n\n  p {\n    margin-bottom: 1rem;\n  }\n\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\nexport const InfoModal = ({ showModal, setShowModal }) => {\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 0\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translate(25%,25%)` : `translate(-100%,-100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(\n    () => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  function sendEmail(e) {\n    e.preventDefault();\n\n    emailjs.sendForm('gmail', 'template_adtnacg', e.target, 'user_m2DzYtnjmQ2Uf4uaPcU36')\n        .then((result) =>{\n            console.log(result.text);\n        }, (error) => {\n            console.log(error.text);\n        });\n        e.target.reset()\n}\n\n  return (\n    <>\n    {showModal ? (\n      <Background onClick={closeModal} ref={modalRef}>\n        <animated.div style={animation}>\n          <ModalWrapper showModal={showModal}>\n            {/* <ModalImg src={require('./modal.jpg')} alt='camera' /> */}\n            <ModalContent>\n            <div>\n              <div className=\"container \">\n                  <div className=\"mailTitle\">의견을 말씀해주세요</div>\n                  <form onSubmit={sendEmail}>\n                      <div className=\"row pt-5 mx-auto\">\n                          <div className=\"col-8 form-group mx-auto\">\n                              <input type=\"text\" className=\"name\" placeholder=\"  Name\" name=\"name\" />\n                          </div>\n                          <div className=\"col-8 form-group pt-2 mx-auto\">\n                              <input type=\"email\" className=\"form-control\" placeholder=\"  Email Address\" name=\"email\" />\n                          </div>\n                          <div className=\"col-8 form-group pt-2 mx-auto\">\n                              <input type=\"text\" className=\"form-control\" placeholder=\"  Subject\" name=\"subject\" />\n                          </div>\n                          <div className=\"col-8 form-group pt-2 mx-auto\">\n                              <textarea className=\"sendmessage\" id=\"\" cols=\"30\" rows=\"8\" placeholder=\"  Your message\" name=\"message\"></textarea>\n                          </div>\n                          <div className=\"col-8 pt-3 mx-auto\">\n                              <input type=\"submit\" className=\"sendbtn\" value=\"Send Message\" />\n                          </div>\n                      </div>\n                  </form>\n              </div>\n          </div>\n            </ModalContent>\n            <CloseModalButton\n              aria-label='Close modal'\n              onClick={() => setShowModal(prev => !prev)}\n            />\n          </ModalWrapper>\n        </animated.div>\n      </Background>\n    ) : null}\n  </>\n  );\n};\n","/home/ubuntu/cs496_week4/src/showContext.js",["180","181","182","183","184","185","186","187"],"import React, {useState,useEffect, Component} from 'react';\nimport './App.css';\nimport { withRouter } from 'react-router-dom';\nimport {useHistory} from 'react-router';\nimport styled from 'styled-components';\nimport { ContextModal } from './components/ContextModal';\nimport { GlobalStyle } from './globalStyles';\nimport './App.css';\nimport plus_mark from './image/plus_mark.png';\nimport { ShowModal } from './components/ShowModal';\n\nconst Container = styled.div`\n  display: center;\n  justify-content: center;\n  align-items: center;\n  //height: 100vh;\n  height : 50%;\n  width : 40%;\n  text-align : center;\n  // vertical-align: middle;\n`;\n\nconst Button = styled.button`\n//min-width: 50px;\n  width : 80px;\n  padding: 16px 32px;\n  // border-radius: 4px;\n  border: none;\n  background: none;\n  color: #fff;\n  font-size: 24px;\n  cursor: pointer;\n`;\n\n// function ShowContext(props) {\n//     const history = useHistory();\n//     const openModal = () => {\n//         // setShowModal(prev => !prev);\n//         // console.log(props.id_result)\n//         // history.push({\n//         //     pathname: '/context',\n//         //     state: {id:props.id_result}\n//         // })\n//         // history.push({\n//         //     pathname : '/context',\n//         //     // state : {addOrEdit: this.props.addOrEdit, current: this.props.current, id: this.props.id_result}\n//         //     state : {addOrEdit:props.addOrEdit}\n//         // })\n//     };\n//     return(\n//         <>\n//              <Container>\n//                 <a onClick={openModal} data-toggle=\"modal\" data-target=\"#myModal\"><button className=\"showwrite\">글 보기</button></a>\n//                  <Button className=\"qnabtn\" onClick={openModal}><img className=\"plus_mark\" src={plus_mark}></img></Button> \n//                   <ShowModal showModal={showModal} setShowModal={setShowModal} addOrEdit={this.props.addOrEdit} current={this.props.current} id={this.props.id_result}/>\n//                 <GlobalStyle />\n//             </Container>\n//             {/* <button onClick={() => {props.history.push(\"/colorselector\")}}></button> */}\n//         </>\n//     );\n// }\nconst ShowContext = (props) => {\n    const [showModal, setShowModal] = useState(false);\n    const openModal = () => {\n        setShowModal(prev => !prev);\n        // props.history.push('/colorselector')\n    };\n    return(\n        <>\n            <Container>\n                <a onClick={openModal} data-toggle=\"modal\" data-target=\"#myModal\"><button className=\"showwrite\">글 보기</button></a>\n                {/* <Button className=\"qnabtn\" onClick={openModal}><img className=\"plus_mark\" src={plus_mark}></img></Button> */}\n                <ShowModal showModal={showModal} setShowModal={setShowModal} addOrEdit={props.addOrEdit} current={props.current} id={props.id_result}/>\n                <GlobalStyle />\n            </Container>\n            {/* <button onClick={() => {props.history.push(\"/colorselector\")}}></button> */}\n        </>\n    );\n}\n\nexport default ShowContext;\n\n\n// function New() {\n//   const [showModal, setShowModal] = useState(false);\n\n//   const openModal = () => {\n//     setShowModal(prev => !prev);\n//   };\n\n//   return (\n//     <>\n//       <Container>\n//         <a onClick={openModal} data-toggle=\"modal\" data-target=\"#myModal\"><img className=\"question_mark\" src={question_mark}></img></a>\n//         {/* <Button className=\"qnabtn\" onClick={openModal}><img className=\"question_mark\" src={question_mark}></img></Button> */}\n//         <Modal showModal={showModal} setShowModal={setShowModal} />\n//         <GlobalStyle />\n//       </Container>\n//     </>\n//   );\n// }\n\n// export default New;\n","/home/ubuntu/cs496_week4/src/components/ShowModal.js",["188","189","190","191","192","193"],"import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport '../App.css'\nimport fire from '../firebaseConfig'\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  // background: rgba(0, 0, 0, 0.8);\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalWrapper = styled.div`\n  width: 800px;\n  height: 500px;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n`;\n\n// const ModalImg = styled.img`\n//   width: 100%;\n//   height: 100%;\n//   border-radius: 10px 0 0 10px;\n//   background: #000;\n// `;\n\nconst ModalContent = styled.div`\n  display: absolute;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width : 150%;\n  height : 100%;\n  align-self : center;\n  line-height: 1.8;\n  color: #141414;\n\n  p {\n    margin-bottom: 1rem;\n  }\n\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\nconst firebaseDb =  fire.database().ref();\nexport const ShowModal = ({ showModal, setShowModal, addOrEdit, current, id }) => {\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 0\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translate(-105%, -25%)` : `translate(-100%,-100%)`\n    // transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(\n    () => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  const initialFieldValues = {\n    fullName : '',\n    mobile : '',\n    email : [],\n    address : '',\n  }\n\n  var [values, setValues] = useState(initialFieldValues)\n\n  // useEffect(() => {\n  //     if(props.currentId=='')\n  //         setValues({\n  //             ...initialFieldValues\n  //         })\n  //     else\n  //         setValues({\n  //             ...props.contactObjects[props.currentId]\n  //         })\n      \n  // }, [props.currentId, props.contactObjects])\n\n  const handleInputChange = e => {\n      var { name, value} = e.target\n      setValues({\n          ...values,\n          [name] : value\n      })\n  }\n\n  const handleFormSubmit = e => {\n      e.preventDefault();\n      // aria-label='Close modal'\n      setShowModal(prev => !prev)\n      addOrEdit(values);\n      alert(\"글 쓰기 완료\");\n  }\n  var [contactObjects, setContactObjects] = useState({})\n  var [currentId, setCurrentId] = useState('')\n  const [comp, setComp] = useState(this)\n\n  useEffect(()=>{\n      firebaseDb.child('contacts').on('value',snapshot=>{\n          if(snapshot.val() != null)\n              setContactObjects({\n                  ...snapshot.val()\n              })\n          else\n          setContactObjects({})\n      })\n  }, [])\n\n  // const addOrEdit = obj => {\n  //     if(currentId=='')\n  //         firebaseDb.child('contacts').push(\n  //             obj,\n  //             err => {\n  //                 if(err) console.log(err)\n  //                 else setCurrentId('')\n  //             }\n  //         )\n  //     else\n  //         firebaseDb.child(`contacts/${currentId}`).set(\n  //             obj,\n  //             err => {\n  //                 if(err) console.log(err)\n  //                 else setCurrentId('')\n  //             }\n  //         )\n\n  // }\n  const onDelete = key => {\n    if(window.confirm('글을 삭제하시겠습니까?')) {\n        var input = prompt(\"비밀번호를 입력하세요\")\n        if(input == contactObjects[key].mobile){\n          firebaseDb.child(`contacts/${key}`).remove(\n            err => {\n                if(err) console.log(err)\n                else setCurrentId('')\n            }\n          )\n          alert(\"삭제 완료\")\n        }\n        else {\n          alert(\"비밀번호가 틀립니다\")\n        }\n    }\n  }\n\n  return (\n    <>\n      {showModal ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <ModalWrapper showModal={showModal}>\n              {/* <ModalImg src={require('./modal.jpg')} alt='camera' /> */}\n              <ModalContent>\n                {/* <h1>Are you ready?</h1>\n                <p>Get exclusive access to our next launch.</p>\n                <button>Join Now</button> */}\n                <div>\n                    <div>\n                      {current.fullName}\n                    </div>\n                    <div>\n                      {current.address}\n                    </div>\n                    {/* <table className=\"table table-borderless table-stripped\">\n                        <thead className=\"thead-light\">\n                            <tr>\n                                <th></th>\n                                <th></th>\n                                <th></th>\n                                <th></th>\n                            </tr>\n                        </thead> */}\n                        {/* <tbody>\n                            {\n                                Object.keys(contactObjects).map(id => {\n                                    console.log(id)\n                                    return <tr key={id}>\n                                        <td>{contactObjects[id].fullName}</td>\n                                        <td>{contactObjects[id].mobile}</td>\n                                        <td>{contactObjects[id].email}</td>\n                                        <td> */}\n                                            {/* <a className=\"btn text-primary\" onClick={() => {setCurrentId(id)}}>\n                                                <i className=\"fas fa-pencil-alt\"></i>\n                                            </a> */}\n                                            {/* <a className=\"btn text-danger\" onClick={() => {onDelete(id)}}>\n                                                <i className=\"fas fa-trash-alt\"></i>\n                                            </a>\n                                        </td>\n                                    </tr>\n                                })\n                            }\n                        </tbody>\n                    </table> */}\n                    {/* <form autoComplete=\"off\">\n                      <div className=\"addComment\">\n                        <text className=\"formtext\">댓글</text>\n                        <input className=\"addtext\" name=\"fullName\" value={current.email} onChange={handleInputChange}/>\n                        <button className=\"addbtn\">등록</button>\n                      </div>\n                    </form> */}\n                      <button onClick={() => {onDelete(id)}}>\n                        글 삭제\n                      </button>\n                      <text className=\"stopcomment\">댓글 기능이 중지되었습니다</text>\n                </div>\n\n                {/* <table className=\"table table-borderless table-stripped\">\n                    <thead className=\"thead-light\">\n                        <tr>\n                            <th>Full Name</th>\n                            <th>Mobile</th>\n                            <th>Email</th>\n                            <th>Address</th> */}\n                            {/* <th>Actions</th> */}\n                            {/* <th><AddContext {...({ addOrEdit, currentId, contactObjects })}/></th> */}\n                        {/* </tr>\n                    </thead>\n                    <tbody>\n                        {\n                          <tr>\n                            <td>{current.fullName}</td>\n                            <td>{current.mobile}</td>\n                            <td>{current.email}</td>\n                            <td>{current.address}</td>\n                            <td> */}\n                                     {/* <a className=\"btn text-primary\" onClick={() => {setCurrentId(current)}} data-toggle=\"modal\" data-target=\"#myModal\">\n                                        <i className=\"fas fa-pencil-alt\"></i>\n                                    </a> */}\n                                    {/* <Container>\n                                        <a onClick={openModal} data-toggle=\"modal\" data-target=\"#myModal\"><img className=\"question_mark\" src={question_mark}></img></a>\n                                        <Button className=\"qnabtn\" onClick={openModal}><img className=\"question_mark\" src={question_mark}></img></Button>\n                                        <InfoModal showModal={showModal} setShowModal={setShowModal} />\n                                        <GlobalStyle />\n                                    </Container>  */}\n                                    {/* <a className=\"btn text-danger\" onClick={() => {onDelete(id)}}>\n                                        <i className=\"fas fa-trash-alt\"></i>\n                                    </a> */}\n                              {/* </td>\n                          </tr> */}\n\n                           {/* Object.keys(contactObjects).map(id =>  */}\n                           {\n                        //     return <tr key={id}>\n                        //         <td>{contactObjects[id].fullName}</td>\n                        //         <td>{contactObjects[id].mobile}</td>\n                        //         <td>{contactObjects[id].email}</td>\n\n                        //         {/* <td><ShowContext {...({ addOrEdit, currentId, contactObjects })}/></td> */}\n                        //     </tr>\n                        // })\n\n                //         }\n                //     </tbody>\n                // </table>\n                /* <button onClick={()=>{setComp(Addcontext)}}>새 글 쓰기</button>\n                 */}\n              </ModalContent>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => setShowModal(prev => !prev)}\n              />\n            </ModalWrapper>\n          </animated.div>\n        </Background>\n      ) : null}\n    </>\n  );\n};\n","/home/ubuntu/cs496_week4/src/components/ShowModel.js",[],"/home/ubuntu/cs496_week4/src/components/ImageSlider.js",["194"],"import React, { useState } from 'react';\nimport { SliderData } from './SliderData';\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa';\n\nconst ImageSlider = ({ slides }) => {\n  const [current, setCurrent] = useState(0);\n  const length = slides.length;\n\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  };\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  };\n\n  if (!Array.isArray(slides) || slides.length <= 0) {\n    return null;\n  }\n\n  return (\n    <section className='slider'>\n      <FaArrowAltCircleLeft className='left-arrow' onClick={prevSlide} />\n      <FaArrowAltCircleRight className='right-arrow' onClick={nextSlide} />\n      {SliderData.map((slide, index) => {\n        return (\n          <div\n            className={index === current ? 'slide active' : 'slide'}\n            key={index}\n          >\n            {index === current && (\n              <img src={slide.image} alt='travel image' className='image' />\n            )}\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nexport default ImageSlider;\n","/home/ubuntu/cs496_week4/src/components/SliderData.js",[],"/home/ubuntu/cs496_week4/src/common/footer.js",[],"/home/ubuntu/cs496_week4/src/components/notFound.js",[],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":15},{"ruleId":"199","severity":1,"message":"203","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":12},{"ruleId":"199","severity":1,"message":"204","line":7,"column":8,"nodeType":"201","messageId":"202","endLine":7,"endColumn":11},{"ruleId":"199","severity":1,"message":"205","line":9,"column":8,"nodeType":"201","messageId":"202","endLine":9,"endColumn":16},{"ruleId":"199","severity":1,"message":"206","line":10,"column":9,"nodeType":"201","messageId":"202","endLine":10,"endColumn":17},{"ruleId":"199","severity":1,"message":"207","line":10,"column":19,"nodeType":"201","messageId":"202","endLine":10,"endColumn":29},{"ruleId":"199","severity":1,"message":"208","line":11,"column":27,"nodeType":"201","messageId":"202","endLine":11,"endColumn":33},{"ruleId":"199","severity":1,"message":"209","line":11,"column":35,"nodeType":"201","messageId":"202","endLine":11,"endColumn":41},{"ruleId":"199","severity":1,"message":"210","line":11,"column":43,"nodeType":"201","messageId":"202","endLine":11,"endColumn":48},{"ruleId":"199","severity":1,"message":"211","line":11,"column":50,"nodeType":"201","messageId":"202","endLine":11,"endColumn":54},{"ruleId":"199","severity":1,"message":"212","line":12,"column":10,"nodeType":"201","messageId":"202","endLine":12,"endColumn":20},{"ruleId":"213","severity":1,"message":"214","line":38,"column":17,"nodeType":"215","messageId":"216","endLine":47,"endColumn":18},{"ruleId":"213","severity":1,"message":"214","line":58,"column":17,"nodeType":"215","messageId":"216","endLine":66,"endColumn":18},{"ruleId":"217","severity":1,"message":"218","line":90,"column":8,"nodeType":"219","endLine":90,"endColumn":10,"suggestions":"220"},{"ruleId":"199","severity":1,"message":"221","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":26},{"ruleId":"199","severity":1,"message":"222","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":24},{"ruleId":"199","severity":1,"message":"223","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":16},{"ruleId":"199","severity":1,"message":"224","line":7,"column":8,"nodeType":"201","messageId":"202","endLine":7,"endColumn":21},{"ruleId":"199","severity":1,"message":"225","line":8,"column":8,"nodeType":"201","messageId":"202","endLine":8,"endColumn":22},{"ruleId":"199","severity":1,"message":"226","line":28,"column":16,"nodeType":"201","messageId":"202","endLine":28,"endColumn":20},{"ruleId":"199","severity":1,"message":"227","line":30,"column":15,"nodeType":"201","messageId":"202","endLine":30,"endColumn":32},{"ruleId":"199","severity":1,"message":"228","line":1,"column":16,"nodeType":"201","messageId":"202","endLine":1,"endColumn":24},{"ruleId":"199","severity":1,"message":"229","line":1,"column":25,"nodeType":"201","messageId":"202","endLine":1,"endColumn":34},{"ruleId":"199","severity":1,"message":"211","line":3,"column":10,"nodeType":"201","messageId":"202","endLine":3,"endColumn":14},{"ruleId":"217","severity":1,"message":"230","line":9,"column":7,"nodeType":"219","endLine":9,"endColumn":9,"suggestions":"231"},{"ruleId":"199","severity":1,"message":"232","line":11,"column":18,"nodeType":"201","messageId":"202","endLine":11,"endColumn":25},{"ruleId":"199","severity":1,"message":"233","line":6,"column":8,"nodeType":"201","messageId":"202","endLine":6,"endColumn":18},{"ruleId":"199","severity":1,"message":"205","line":9,"column":8,"nodeType":"201","messageId":"202","endLine":9,"endColumn":16},{"ruleId":"199","severity":1,"message":"234","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":12},{"ruleId":"199","severity":1,"message":"235","line":7,"column":8,"nodeType":"201","messageId":"202","endLine":7,"endColumn":17},{"ruleId":"199","severity":1,"message":"211","line":3,"column":10,"nodeType":"201","messageId":"202","endLine":3,"endColumn":14},{"ruleId":"199","severity":1,"message":"236","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":19},{"ruleId":"199","severity":1,"message":"205","line":7,"column":8,"nodeType":"201","messageId":"202","endLine":7,"endColumn":16},{"ruleId":"199","severity":1,"message":"237","line":9,"column":10,"nodeType":"201","messageId":"202","endLine":9,"endColumn":19},{"ruleId":"199","severity":1,"message":"238","line":10,"column":10,"nodeType":"201","messageId":"202","endLine":10,"endColumn":21},{"ruleId":"199","severity":1,"message":"224","line":11,"column":8,"nodeType":"201","messageId":"202","endLine":11,"endColumn":21},{"ruleId":"199","severity":1,"message":"239","line":19,"column":12,"nodeType":"201","messageId":"202","endLine":19,"endColumn":16},{"ruleId":"199","severity":1,"message":"240","line":19,"column":18,"nodeType":"201","messageId":"202","endLine":19,"endColumn":25},{"ruleId":"199","severity":1,"message":"241","line":20,"column":9,"nodeType":"201","messageId":"202","endLine":20,"endColumn":18},{"ruleId":"242","severity":1,"message":"243","line":34,"column":21,"nodeType":"244","messageId":"245","endLine":34,"endColumn":23},{"ruleId":"199","severity":1,"message":"246","line":53,"column":11,"nodeType":"201","messageId":"202","endLine":53,"endColumn":19},{"ruleId":"199","severity":1,"message":"247","line":64,"column":11,"nodeType":"201","messageId":"202","endLine":64,"endColumn":20},{"ruleId":"199","severity":1,"message":"248","line":75,"column":11,"nodeType":"201","messageId":"202","endLine":75,"endColumn":17},{"ruleId":"199","severity":1,"message":"249","line":86,"column":12,"nodeType":"201","messageId":"202","endLine":86,"endColumn":21},{"ruleId":"199","severity":1,"message":"250","line":87,"column":11,"nodeType":"201","messageId":"202","endLine":87,"endColumn":20},{"ruleId":"199","severity":1,"message":"251","line":94,"column":11,"nodeType":"201","messageId":"202","endLine":94,"endColumn":18},{"ruleId":"199","severity":1,"message":"252","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":16},{"ruleId":"199","severity":1,"message":"248","line":19,"column":7,"nodeType":"201","messageId":"202","endLine":19,"endColumn":13},{"ruleId":"253","severity":1,"message":"254","line":40,"column":9,"nodeType":"255","endLine":40,"endColumn":75},{"ruleId":"256","severity":1,"message":"257","line":40,"column":75,"nodeType":"255","endLine":40,"endColumn":126},{"ruleId":"199","severity":1,"message":"229","line":1,"column":25,"nodeType":"201","messageId":"202","endLine":1,"endColumn":34},{"ruleId":"199","severity":1,"message":"211","line":3,"column":10,"nodeType":"201","messageId":"202","endLine":3,"endColumn":14},{"ruleId":"199","severity":1,"message":"248","line":21,"column":7,"nodeType":"201","messageId":"202","endLine":21,"endColumn":13},{"ruleId":"253","severity":1,"message":"254","line":42,"column":17,"nodeType":"255","endLine":42,"endColumn":83},{"ruleId":"256","severity":1,"message":"257","line":42,"column":83,"nodeType":"255","endLine":42,"endColumn":126},{"ruleId":"242","severity":1,"message":"243","line":194,"column":84,"nodeType":"244","messageId":"245","endLine":194,"endColumn":86},{"ruleId":"199","severity":1,"message":"252","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":16},{"ruleId":"199","severity":1,"message":"229","line":1,"column":25,"nodeType":"201","messageId":"202","endLine":1,"endColumn":34},{"ruleId":"199","severity":1,"message":"221","line":1,"column":36,"nodeType":"201","messageId":"202","endLine":1,"endColumn":45},{"ruleId":"199","severity":1,"message":"212","line":3,"column":10,"nodeType":"201","messageId":"202","endLine":3,"endColumn":20},{"ruleId":"199","severity":1,"message":"207","line":4,"column":9,"nodeType":"201","messageId":"202","endLine":4,"endColumn":19},{"ruleId":"199","severity":1,"message":"258","line":6,"column":10,"nodeType":"201","messageId":"202","endLine":6,"endColumn":22},{"ruleId":"199","severity":1,"message":"259","line":9,"column":8,"nodeType":"201","messageId":"202","endLine":9,"endColumn":17},{"ruleId":"199","severity":1,"message":"248","line":23,"column":7,"nodeType":"201","messageId":"202","endLine":23,"endColumn":13},{"ruleId":"253","severity":1,"message":"254","line":71,"column":17,"nodeType":"255","endLine":71,"endColumn":83},{"ruleId":"199","severity":1,"message":"260","line":129,"column":9,"nodeType":"201","messageId":"202","endLine":129,"endColumn":26},{"ruleId":"199","severity":1,"message":"261","line":137,"column":9,"nodeType":"201","messageId":"202","endLine":137,"endColumn":25},{"ruleId":"199","severity":1,"message":"262","line":145,"column":8,"nodeType":"201","messageId":"202","endLine":145,"endColumn":17},{"ruleId":"199","severity":1,"message":"239","line":146,"column":10,"nodeType":"201","messageId":"202","endLine":146,"endColumn":14},{"ruleId":"199","severity":1,"message":"240","line":146,"column":16,"nodeType":"201","messageId":"202","endLine":146,"endColumn":23},{"ruleId":"242","severity":1,"message":"243","line":181,"column":18,"nodeType":"244","messageId":"245","endLine":181,"endColumn":20},{"ruleId":"263","severity":1,"message":"264","line":32,"column":15,"nodeType":"255","endLine":32,"endColumn":77},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],"no-unused-vars","'App_tmp' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'Nav' is defined but never used.","'Question' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["267"],"'Component' is defined but never used.","'withFirebaseAuth' is defined but never used.","'firebase' is defined but never used.","'question_mark' is defined but never used.","'firebaseConfig' is defined but never used.","'show' is assigned a value but never used.","'closeModalHandler' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchItem' and 'item'. Either include them or remove the dependency array.",["268"],"'setItem' is assigned a value but never used.","'AddContext' is defined but never used.","'logo' is defined but never used.","'ShowModal' is defined but never used.","'ContactForm' is defined but never used.","'InfoModal' is defined but never used.","'GlobalStyle' is defined but never used.","'comp' is assigned a value but never used.","'setComp' is assigned a value but never used.","'id_result' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'onDelete' is assigned a value but never used.","'Container' is assigned a value but never used.","'Button' is assigned a value but never used.","'showModal' is assigned a value but never used.","'openModal' is assigned a value but never used.","'history' is assigned a value but never used.","'modalimg' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ContextModal' is defined but never used.","'plus_mark' is defined but never used.","'handleInputChange' is assigned a value but never used.","'handleFormSubmit' is assigned a value but never used.","'currentId' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},"Update the dependencies array to be: [authListener]",{"range":"273","text":"274"},"Update the dependencies array to be: [fetchItem, item]",{"range":"275","text":"276"},[2620,2622],"[authListener]",[186,188],"[fetchItem, item]"]